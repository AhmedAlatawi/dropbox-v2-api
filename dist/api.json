{
	"auth/token/from_oauth1": {
		"uri": "https://api.dropboxapi.com/2/auth/token/from_oauth1",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "oauth1_token",
				"example": "qievr8hamyg6ndck",
				"type": "String(min_length=1)",
				"desc": "The supplied OAuth 1.0 access token."
			},
			{
				"name": "oauth1_token_secret",
				"example": "qomoftv0472git7",
				"type": "String(min_length=1)",
				"desc": "The token secret associated with the supplied access token."
			}
		],
		"returnParameters": {
			"oauth2_token": "9mCrkS7BIdAAAAAAAAAAHHS0TsSnpYvKQVtKdBnN5IuzhYOGblSgTcHgBFKFMmFn"
		}
	},
	"auth/token/revoke": {
		"uri": "https://api.dropboxapi.com/2/auth/token/revoke",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [],
		"returnParameters": null
	},
	"files/alpha/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/alpha/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path of a file or folder on Dropbox."
			},
			{
				"name": "include_media_info",
				"example": false,
				"type": "Boolean",
				"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
			},
			{
				"name": "include_deleted",
				"example": false,
				"type": "Boolean",
				"desc": "If true,   will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False."
			},
			{
				"name": "include_has_explicit_shared_members",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
			},
			{
				"name": "include_property_templates",
				"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))?",
				"desc": "If set to a valid list of template IDs, FileMetadata.property_groups is set for files with custom properties. This field is optional."
			}
		],
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/alpha/upload": {
		"uri": "https://content.dropboxapi.com/2/files/alpha/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"endpointFormat": "content-upload",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math/Matrices.txt",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to save the file."
			},
			{
				"name": "mode",
				"example": "add",
				"type": "WriteMode",
				"desc": "Selects what to do if the file already exists. The default for this union is add.",
				"parameters": [
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "add",
				"type": "Void",
				"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
			},
			{
				"name": "overwrite",
				"type": "Void",
				"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
			},
			{
				"name": "update",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
				"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
			},
			{
				"name": "autorename",
				"example": true,
				"type": "Boolean",
				"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
			},
			{
				"name": "client_modified",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
				"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
			},
			{
				"name": "mute",
				"example": false,
				"type": "Boolean",
				"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
			},
			{
				"name": "property_groups",
				"example": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"type": "List of (PropertyGroup)?",
				"desc": "List of custom properties to add to file. This field is optional.",
				"parameters": [
					{
						"name": "template_id",
						"example": null,
						"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
						"desc": "A unique identifier for a property template type."
					},
					{
						"name": "fields",
						"example": null,
						"type": "List of (PropertyField)",
						"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
						"parameters": [
							{
								"name": "name",
								"example": null,
								"type": "String",
								"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
							},
							{
								"name": "value",
								"example": null,
								"type": "String",
								"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
							}
						]
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "template_id",
				"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
				"desc": "A unique identifier for a property template type."
			},
			{
				"name": "fields",
				"type": "List of (PropertyField)",
				"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
				"parameters": [
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "name",
				"type": "String",
				"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
			},
			{
				"name": "value",
				"type": "String",
				"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/copy": {
		"uri": "https://api.dropboxapi.com/2/files/copy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "from_path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to be copied or moved."
			},
			{
				"name": "to_path",
				"example": "/Homework/algebra",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox that is the destination."
			},
			{
				"name": "allow_shared_folder",
				"example": false,
				"type": "Boolean",
				"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for  . The default for this field is False."
			},
			{
				"name": "autorename",
				"example": false,
				"type": "Boolean",
				"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/copy_batch": {
		"uri": "https://api.dropboxapi.com/2/files/copy_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "entries",
				"example": [
					{
						"from_path": "/Homework/math",
						"to_path": "/Homework/algebra"
					}
				],
				"type": "List of (RelocationPath)",
				"desc": "List of entries to be moved or copied. Each entry is  .",
				"parameters": [
					{
						"name": "from_path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to be copied or moved."
					},
					{
						"name": "to_path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox that is the destination."
					}
				]
			},
			{
				"name": "from_path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to be copied or moved."
			},
			{
				"name": "to_path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox that is the destination."
			},
			{
				"name": "allow_shared_folder",
				"example": false,
				"type": "Boolean",
				"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if RelocationPath.from_path contains shared folder.  This field is always true for  . The default for this field is False."
			},
			{
				"name": "autorename",
				"example": false,
				"type": "Boolean",
				"desc": "If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/copy_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/copy_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/copy_reference/get": {
		"uri": "https://api.dropboxapi.com/2/files/copy_reference/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/video.mp4",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the file or folder you want to get a copy reference to."
			}
		],
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			},
			"copy_reference": "z1X6ATl6aWtzOGq0c3g5Ng",
			"expires": "2045-05-12T15:50:38Z"
		}
	},
	"files/copy_reference/save": {
		"uri": "https://api.dropboxapi.com/2/files/copy_reference/save",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "copy_reference",
				"example": "z1X6ATl6aWtzOGq0c3g5Ng",
				"type": "String",
				"desc": "A copy reference returned by  ."
			},
			{
				"name": "path",
				"example": "/video.mp4",
				"type": "String(pattern=\"/(.|[\\r\\n])*\")",
				"desc": "Path in the user's Dropbox that is the destination."
			}
		],
		"returnParameters": {
			"metadata": {
				".tag": "file",
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			}
		}
	},
	"files/create_folder": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to create."
			},
			{
				"name": "autorename",
				"example": false,
				"type": "Boolean",
				"desc": "If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict. The default for this field is False."
			}
		],
		"returnParameters": {
			"name": "math",
			"id": "id:a4ayc_80_OEAAAAAAAAAXz",
			"path_lower": "/homework/math",
			"path_display": "/Homework/math",
			"sharing_info": {
				"read_only": false,
				"parent_shared_folder_id": "84528192421",
				"traverse_only": false,
				"no_access": false
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			]
		}
	},
	"files/delete": {
		"uri": "https://api.dropboxapi.com/2/files/delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math/Prime_Numbers.txt",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to delete."
			}
		],
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/delete_batch": {
		"uri": "https://api.dropboxapi.com/2/files/delete_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "entries",
				"example": [
					{
						"path": "/Homework/math/Prime_Numbers.txt"
					}
				],
				"type": "List of (DeleteArg)",
				"desc": "",
				"parameters": [
					{
						"name": "path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to delete."
					}
				]
			},
			{
				"name": "path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to delete."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/delete_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/delete_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/download": {
		"uri": "https://content.dropboxapi.com/2/files/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"endpointFormat": "content-download",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math/Prime_Numbers.txt",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path of the file to download."
			},
			{
				"name": "rev",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
				"desc": "Deprecated. Please specify revision in path instead. This field is optional."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path of a file or folder on Dropbox."
			},
			{
				"name": "include_media_info",
				"example": false,
				"type": "Boolean",
				"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
			},
			{
				"name": "include_deleted",
				"example": false,
				"type": "Boolean",
				"desc": "If true,   will be returned for deleted file or folder, otherwise LookupError.not_found will be returned. The default for this field is False."
			},
			{
				"name": "include_has_explicit_shared_members",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/get_preview": {
		"uri": "https://content.dropboxapi.com/2/files/get_preview",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"endpointFormat": "content-download",
		"parameters": [
			{
				"name": "path",
				"example": "/word.docx",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path of the file to preview."
			},
			{
				"name": "rev",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")?",
				"desc": "Deprecated. Please specify revision in path instead. This field is optional."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/get_temporary_link": {
		"uri": "https://api.dropboxapi.com/2/files/get_temporary_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/video.mp4",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the file you want a temporary link to."
			}
		],
		"returnParameters": {
			"metadata": {
				"name": "Prime_Numbers.txt",
				"id": "id:a4ayc_80_OEAAAAAAAAAXw",
				"client_modified": "2015-05-12T15:50:38Z",
				"server_modified": "2015-05-12T15:50:38Z",
				"rev": "a1c10ce0dd78",
				"size": 7212,
				"path_lower": "/homework/math/prime_numbers.txt",
				"path_display": "/Homework/math/Prime_Numbers.txt",
				"sharing_info": {
					"read_only": true,
					"parent_shared_folder_id": "84528192421",
					"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
				},
				"property_groups": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"has_explicit_shared_members": false,
				"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
			},
			"link": "https://dl.dropboxusercontent.com/apitl/1/YXNkZmFzZGcyMzQyMzI0NjU2NDU2NDU2"
		}
	},
	"files/get_thumbnail": {
		"uri": "https://content.dropboxapi.com/2/files/get_thumbnail",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"endpointFormat": "content-download",
		"parameters": [
			{
				"name": "path",
				"example": "/image.jpg",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the image file you want to thumbnail."
			},
			{
				"name": "format",
				"example": "jpeg",
				"type": "ThumbnailFormat",
				"desc": "The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts. The default for this union is jpeg.",
				"parameters": [
					{
						"name": "jpeg",
						"example": null,
						"type": "Void",
						"desc": ""
					},
					{
						"name": "png",
						"example": null,
						"type": "Void",
						"desc": ""
					}
				]
			},
			{
				"name": "jpeg",
				"type": "Void",
				"desc": ""
			},
			{
				"name": "png",
				"type": "Void",
				"desc": ""
			},
			{
				"name": "size",
				"example": "w64h64",
				"type": "ThumbnailSize",
				"desc": "The size for the thumbnail image. The default for this union is w64h64.",
				"parameters": [
					{
						"name": "w32h32",
						"example": null,
						"type": "Void",
						"desc": "32 by 32 px."
					},
					{
						"name": "w64h64",
						"example": null,
						"type": "Void",
						"desc": "64 by 64 px."
					},
					{
						"name": "w128h128",
						"example": null,
						"type": "Void",
						"desc": "128 by 128 px."
					},
					{
						"name": "w640h480",
						"example": null,
						"type": "Void",
						"desc": "640 by 480 px."
					},
					{
						"name": "w1024h768",
						"example": null,
						"type": "Void",
						"desc": "1024 by 768."
					}
				]
			},
			{
				"name": "w32h32",
				"type": "Void",
				"desc": "32 by 32 px."
			},
			{
				"name": "w64h64",
				"type": "Void",
				"desc": "64 by 64 px."
			},
			{
				"name": "w128h128",
				"type": "Void",
				"desc": "128 by 128 px."
			},
			{
				"name": "w640h480",
				"type": "Void",
				"desc": "640 by 480 px."
			},
			{
				"name": "w1024h768",
				"type": "Void",
				"desc": "1024 by 768."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/list_folder": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)?|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the folder you want to see the contents of."
			},
			{
				"name": "recursive",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
			},
			{
				"name": "include_media_info",
				"example": false,
				"type": "Boolean",
				"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
			},
			{
				"name": "include_deleted",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
			},
			{
				"name": "include_has_explicit_shared_members",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
			}
		],
		"returnParameters": {
			"entries": [
				{
					".tag": "file",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				},
				{
					".tag": "folder",
					"name": "math",
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path_lower": "/homework/math",
					"path_display": "/Homework/math",
					"sharing_info": {
						"read_only": false,
						"parent_shared_folder_id": "84528192421",
						"traverse_only": false,
						"no_access": false
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": false
		}
	},
	"files/list_folder/continue": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String(min_length=1)",
				"desc": "The cursor returned by your last call to   or  ."
			}
		],
		"returnParameters": {
			"entries": [
				{
					".tag": "file",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				},
				{
					".tag": "folder",
					"name": "math",
					"id": "id:a4ayc_80_OEAAAAAAAAAXz",
					"path_lower": "/homework/math",
					"path_display": "/Homework/math",
					"sharing_info": {
						"read_only": false,
						"parent_shared_folder_id": "84528192421",
						"traverse_only": false,
						"no_access": false
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					]
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
			"has_more": false
		}
	},
	"files/list_folder/get_latest_cursor": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/get_latest_cursor",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)?|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the folder you want to see the contents of."
			},
			{
				"name": "recursive",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
			},
			{
				"name": "include_media_info",
				"example": false,
				"type": "Boolean",
				"desc": "If true, FileMetadata.media_info is set for photo and video. The default for this field is False."
			},
			{
				"name": "include_deleted",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
			},
			{
				"name": "include_has_explicit_shared_members",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members. The default for this field is False."
			}
		],
		"returnParameters": {
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"files/list_folder/longpoll": {
		"uri": "https://notify.dropboxapi.com/2/files/list_folder/longpoll",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String(min_length=1)",
				"desc": "A cursor as returned by   or  . Cursors retrieved by setting ListFolderArg.include_media_info to true are not supported."
			},
			{
				"name": "timeout",
				"example": 30,
				"type": "UInt64",
				"desc": "A timeout in seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts. The default for this field is 30."
			}
		],
		"returnParameters": {
			"changes": true
		}
	},
	"files/list_revisions": {
		"uri": "https://api.dropboxapi.com/2/files/list_revisions",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/root/word.docx",
				"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the file you want to see the revisions of."
			},
			{
				"name": "limit",
				"example": 10,
				"type": "UInt64",
				"desc": "The maximum number of revision entries returned. The default for this field is 10."
			}
		],
		"returnParameters": {
			"is_deleted": false,
			"entries": [
				{
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				}
			]
		}
	},
	"files/move": {
		"uri": "https://api.dropboxapi.com/2/files/move",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "from_path",
				"example": "/Homework/math",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to be copied or moved."
			},
			{
				"name": "to_path",
				"example": "/Homework/algebra",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox that is the destination."
			},
			{
				"name": "allow_shared_folder",
				"example": false,
				"type": "Boolean",
				"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if from_path contains shared folder. This field is always true for  . The default for this field is False."
			},
			{
				"name": "autorename",
				"example": false,
				"type": "Boolean",
				"desc": "If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "file",
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/move_batch": {
		"uri": "https://api.dropboxapi.com/2/files/move_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "entries",
				"example": [
					{
						"from_path": "/Homework/math",
						"to_path": "/Homework/algebra"
					}
				],
				"type": "List of (RelocationPath)",
				"desc": "List of entries to be moved or copied. Each entry is  .",
				"parameters": [
					{
						"name": "from_path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to be copied or moved."
					},
					{
						"name": "to_path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox that is the destination."
					}
				]
			},
			{
				"name": "from_path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to be copied or moved."
			},
			{
				"name": "to_path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox that is the destination."
			},
			{
				"name": "allow_shared_folder",
				"example": false,
				"type": "Boolean",
				"desc": "If true,   will copy contents in shared folder, otherwise RelocationError.cant_copy_shared_folder will be returned if RelocationPath.from_path contains shared folder.  This field is always true for  . The default for this field is False."
			},
			{
				"name": "autorename",
				"example": false,
				"type": "Boolean",
				"desc": "If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/move_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/move_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			]
		}
	},
	"files/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/files/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math/Prime_Numbers.txt",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to delete."
			}
		],
		"returnParameters": null
	},
	"files/properties/add": {
		"uri": "https://api.dropboxapi.com/2/files/properties/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/my_awesome/word.docx",
				"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
				"desc": "A unique identifier for the file."
			},
			{
				"name": "property_groups",
				"example": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"type": "List of (PropertyGroup)",
				"desc": "Filled custom property templates associated with a file.",
				"parameters": [
					{
						"name": "template_id",
						"example": null,
						"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
						"desc": "A unique identifier for a property template type."
					},
					{
						"name": "fields",
						"example": null,
						"type": "List of (PropertyField)",
						"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
						"parameters": [
							{
								"name": "name",
								"example": null,
								"type": "String",
								"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
							},
							{
								"name": "value",
								"example": null,
								"type": "String",
								"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
							}
						]
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "template_id",
				"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
				"desc": "A unique identifier for a property template type."
			},
			{
				"name": "fields",
				"type": "List of (PropertyField)",
				"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
				"parameters": [
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "name",
				"type": "String",
				"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
			},
			{
				"name": "value",
				"type": "String",
				"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
			}
		],
		"returnParameters": null
	},
	"files/properties/overwrite": {
		"uri": "https://api.dropboxapi.com/2/files/properties/overwrite",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/my_awesome/word.docx",
				"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
				"desc": "A unique identifier for the file."
			},
			{
				"name": "property_groups",
				"example": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						]
					}
				],
				"type": "List of (PropertyGroup)",
				"desc": "Filled custom property templates associated with a file.",
				"parameters": [
					{
						"name": "template_id",
						"example": null,
						"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
						"desc": "A unique identifier for a property template type."
					},
					{
						"name": "fields",
						"example": null,
						"type": "List of (PropertyField)",
						"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
						"parameters": [
							{
								"name": "name",
								"example": null,
								"type": "String",
								"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
							},
							{
								"name": "value",
								"example": null,
								"type": "String",
								"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
							}
						]
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "template_id",
				"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
				"desc": "A unique identifier for a property template type."
			},
			{
				"name": "fields",
				"type": "List of (PropertyField)",
				"desc": "This is a list of custom properties associated with a file. There can be up to 32 properties for a template.",
				"parameters": [
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "name",
				"type": "String",
				"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
			},
			{
				"name": "value",
				"type": "String",
				"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
			}
		],
		"returnParameters": null
	},
	"files/properties/remove": {
		"uri": "https://api.dropboxapi.com/2/files/properties/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/my_awesome/word.docx",
				"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
				"desc": "A unique identifier for the file."
			},
			{
				"name": "property_template_ids",
				"example": [
					"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
				],
				"type": "List of (String(min_length=1, pattern=\"(/|ptid:).*\"))",
				"desc": "A list of identifiers for a property template created by route properties/template/add."
			}
		],
		"returnParameters": null
	},
	"files/properties/template/get": {
		"uri": "https://api.dropboxapi.com/2/files/properties/template/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "template_id",
				"example": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
				"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
				"desc": "An identifier for property template added by route properties/template/add."
			}
		],
		"returnParameters": {
			"name": "Security",
			"description": "These properties describe how confidential this file is.",
			"fields": [
				{
					"name": "Security Policy",
					"description": "This is the security policy of the file or folder described.\nPolicies can be Confidential, Public or Internal.",
					"type": {
						".tag": "string"
					}
				}
			]
		}
	},
	"files/properties/template/list": {
		"uri": "https://api.dropboxapi.com/2/files/properties/template/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [],
		"returnParameters": {
			"template_ids": [
				"ptid:1a5n2i6d3OYEAAAAAAAAAYa"
			]
		}
	},
	"files/properties/update": {
		"uri": "https://api.dropboxapi.com/2/files/properties/update",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/my_awesome/word.docx",
				"type": "String(pattern=\"/(.|[\\r\\n])*|id:.*|(ns:[0-9]+(/.*)?)\")",
				"desc": "A unique identifier for the file."
			},
			{
				"name": "update_property_groups",
				"example": [
					{
						"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
						"add_or_update_fields": [
							{
								"name": "Security Policy",
								"value": "Confidential"
							}
						],
						"remove_fields": []
					}
				],
				"type": "List of (PropertyGroupUpdate)",
				"desc": "Filled custom property templates associated with a file.",
				"parameters": [
					{
						"name": "template_id",
						"example": null,
						"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
						"desc": "A unique identifier for a property template."
					},
					{
						"name": "add_or_update_fields",
						"example": null,
						"type": "List of (PropertyField)?",
						"desc": "List of property fields to update if the field already exists. If the field doesn't exist, add the field to the property group. This field is optional.",
						"parameters": [
							{
								"name": "name",
								"example": null,
								"type": "String",
								"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
							},
							{
								"name": "value",
								"example": null,
								"type": "String",
								"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
							}
						]
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					},
					{
						"name": "remove_fields",
						"example": null,
						"type": "List of (String)?",
						"desc": "List of property field names to remove from property group if the field exists. This field is optional."
					},
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "template_id",
				"type": "String(min_length=1, pattern=\"(/|ptid:).*\")",
				"desc": "A unique identifier for a property template."
			},
			{
				"name": "add_or_update_fields",
				"type": "List of (PropertyField)?",
				"desc": "List of property fields to update if the field already exists. If the field doesn't exist, add the field to the property group. This field is optional.",
				"parameters": [
					{
						"name": "name",
						"example": null,
						"type": "String",
						"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
					},
					{
						"name": "value",
						"example": null,
						"type": "String",
						"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
					}
				]
			},
			{
				"name": "name",
				"type": "String",
				"desc": "This is the name or key of a custom property in a property template. File property names can be up to 256 bytes."
			},
			{
				"name": "value",
				"type": "String",
				"desc": "Value of a custom property attached to a file. Values can be up to 1024 bytes."
			},
			{
				"name": "remove_fields",
				"type": "List of (String)?",
				"desc": "List of property field names to remove from property group if the field exists. This field is optional."
			}
		],
		"returnParameters": null
	},
	"files/restore": {
		"uri": "https://api.dropboxapi.com/2/files/restore",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/root/word.docx",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the file you want to restore."
			},
			{
				"name": "rev",
				"example": "a1c10ce0dd78",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
				"desc": "The revision to restore for the file."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/save_url": {
		"uri": "https://api.dropboxapi.com/2/files/save_url",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/a.txt",
				"type": "String(pattern=\"/(.|[\\r\\n])*\")",
				"desc": "The path in Dropbox where the URL will be saved to."
			},
			{
				"name": "url",
				"example": "http://example.com/a.txt",
				"type": "String",
				"desc": "The URL to be saved."
			}
		],
		"returnParameters": null
	},
	"files/save_url/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/files/save_url/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "in_progress"
		}
	},
	"files/search": {
		"uri": "https://api.dropboxapi.com/2/files/search",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)?|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path in the user's Dropbox to search. Should probably be a folder."
			},
			{
				"name": "query",
				"example": "prime numbers",
				"type": "String",
				"desc": "The string to search for. The search string is split on spaces into multiple tokens. For file name searching, the last token is used for prefix matching (i.e. \"bat c\" matches \"bat cave\" but not \"batman car\")."
			},
			{
				"name": "start",
				"example": 0,
				"type": "UInt64",
				"desc": "The starting index within the search results (used for paging). The default for this field is 0."
			},
			{
				"name": "max_results",
				"example": 100,
				"type": "UInt64",
				"desc": "The maximum number of search results to return. The default for this field is 100."
			},
			{
				"name": "mode",
				"example": "filename",
				"type": "SearchMode",
				"desc": "The search mode (filename, filename_and_content, or deleted_filename). Note that searching file content is only available for Dropbox Business accounts. The default for this union is filename.",
				"parameters": [
					{
						"name": "filename",
						"example": null,
						"type": "Void",
						"desc": "Search file and folder names."
					},
					{
						"name": "filename_and_content",
						"example": null,
						"type": "Void",
						"desc": "Search file and folder names as well as file contents."
					},
					{
						"name": "deleted_filename",
						"example": null,
						"type": "Void",
						"desc": "Search for deleted file and folder names."
					}
				]
			},
			{
				"name": "filename",
				"type": "Void",
				"desc": "Search file and folder names."
			},
			{
				"name": "filename_and_content",
				"type": "Void",
				"desc": "Search file and folder names as well as file contents."
			},
			{
				"name": "deleted_filename",
				"type": "Void",
				"desc": "Search for deleted file and folder names."
			}
		],
		"returnParameters": {
			"matches": [
				{
					"match_type": {
						".tag": "content"
					},
					"metadata": {
						".tag": "file",
						"name": "Prime_Numbers.txt",
						"id": "id:a4ayc_80_OEAAAAAAAAAXw",
						"client_modified": "2015-05-12T15:50:38Z",
						"server_modified": "2015-05-12T15:50:38Z",
						"rev": "a1c10ce0dd78",
						"size": 7212,
						"path_lower": "/homework/math/prime_numbers.txt",
						"path_display": "/Homework/math/Prime_Numbers.txt",
						"sharing_info": {
							"read_only": true,
							"parent_shared_folder_id": "84528192421",
							"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
						},
						"property_groups": [
							{
								"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
								"fields": [
									{
										"name": "Security Policy",
										"value": "Confidential"
									}
								]
							}
						],
						"has_explicit_shared_members": false,
						"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
					}
				}
			],
			"more": false,
			"start": 1
		}
	},
	"files/upload": {
		"uri": "https://content.dropboxapi.com/2/files/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"endpointFormat": "content-upload",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/math/Matrices.txt",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to save the file."
			},
			{
				"name": "mode",
				"example": "add",
				"type": "WriteMode",
				"desc": "Selects what to do if the file already exists. The default for this union is add.",
				"parameters": [
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "add",
				"type": "Void",
				"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
			},
			{
				"name": "overwrite",
				"type": "Void",
				"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
			},
			{
				"name": "update",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
				"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
			},
			{
				"name": "autorename",
				"example": true,
				"type": "Boolean",
				"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
			},
			{
				"name": "client_modified",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
				"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
			},
			{
				"name": "mute",
				"example": false,
				"type": "Boolean",
				"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/upload_session/append": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/append",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"endpointFormat": "content-upload",
		"parameters": [
			{
				"name": "session_id",
				"example": "1234faaf0678bcde",
				"type": "String",
				"desc": "The upload session ID (returned by  )."
			},
			{
				"name": "offset",
				"example": 0,
				"type": "UInt64",
				"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
			}
		],
		"returnParameters": null
	},
	"files/upload_session/append_v2": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/append_v2",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"endpointFormat": "content-upload",
		"parameters": [
			{
				"name": "cursor",
				"example": {
					"session_id": "1234faaf0678bcde",
					"offset": 0
				},
				"type": "UploadSessionCursor",
				"desc": "Contains the upload session ID and the offset.",
				"parameters": [
					{
						"name": "session_id",
						"example": null,
						"type": "String",
						"desc": "The upload session ID (returned by  )."
					},
					{
						"name": "offset",
						"example": null,
						"type": "UInt64",
						"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
					}
				]
			},
			{
				"name": "session_id",
				"type": "String",
				"desc": "The upload session ID (returned by  )."
			},
			{
				"name": "offset",
				"type": "UInt64",
				"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
			},
			{
				"name": "close",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the current session will be closed, at which point you won't be able to call   anymore with the current session. The default for this field is False."
			}
		],
		"returnParameters": null
	},
	"files/upload_session/finish": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/finish",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"endpointFormat": "content-upload",
		"parameters": [
			{
				"name": "cursor",
				"example": {
					"session_id": "1234faaf0678bcde",
					"offset": 0
				},
				"type": "UploadSessionCursor",
				"desc": "Contains the upload session ID and the offset.",
				"parameters": [
					{
						"name": "session_id",
						"example": null,
						"type": "String",
						"desc": "The upload session ID (returned by  )."
					},
					{
						"name": "offset",
						"example": null,
						"type": "UInt64",
						"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
					}
				]
			},
			{
				"name": "session_id",
				"type": "String",
				"desc": "The upload session ID (returned by  )."
			},
			{
				"name": "offset",
				"type": "UInt64",
				"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
			},
			{
				"name": "commit",
				"example": {
					"path": "/Homework/math/Matrices.txt",
					"mode": "add",
					"autorename": true,
					"mute": false
				},
				"type": "CommitInfo",
				"desc": "Contains the path and other optional modifiers for the commit.",
				"parameters": [
					{
						"name": "path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to save the file."
					},
					{
						"name": "mode",
						"example": null,
						"type": "WriteMode",
						"desc": "Selects what to do if the file already exists. The default for this union is add.",
						"parameters": [
							{
								"name": "add",
								"example": null,
								"type": "Void",
								"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"example": null,
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"example": null,
								"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							}
						]
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					},
					{
						"name": "autorename",
						"example": null,
						"type": "Boolean",
						"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
					},
					{
						"name": "client_modified",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
						"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
					},
					{
						"name": "mute",
						"example": null,
						"type": "Boolean",
						"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to save the file."
			},
			{
				"name": "mode",
				"type": "WriteMode",
				"desc": "Selects what to do if the file already exists. The default for this union is add.",
				"parameters": [
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "add",
				"type": "Void",
				"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
			},
			{
				"name": "overwrite",
				"type": "Void",
				"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
			},
			{
				"name": "update",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
				"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
			},
			{
				"name": "autorename",
				"type": "Boolean",
				"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
			},
			{
				"name": "client_modified",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
				"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
			},
			{
				"name": "mute",
				"type": "Boolean",
				"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
			}
		],
		"returnParameters": {
			"name": "Prime_Numbers.txt",
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"path_lower": "/homework/math/prime_numbers.txt",
			"path_display": "/Homework/math/Prime_Numbers.txt",
			"sharing_info": {
				"read_only": true,
				"parent_shared_folder_id": "84528192421",
				"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
			},
			"property_groups": [
				{
					"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
					"fields": [
						{
							"name": "Security Policy",
							"value": "Confidential"
						}
					]
				}
			],
			"has_explicit_shared_members": false,
			"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
		}
	},
	"files/upload_session/finish_batch": {
		"uri": "https://api.dropboxapi.com/2/files/upload_session/finish_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "entries",
				"example": [
					{
						"cursor": {
							"session_id": "1234faaf0678bcde",
							"offset": 0
						},
						"commit": {
							"path": "/Homework/math/Matrices.txt",
							"mode": {
								".tag": "add"
							},
							"autorename": true,
							"mute": false
						}
					}
				],
				"type": "List of (UploadSessionFinishArg, max_items=1000)",
				"desc": "Commit information for each file in the batch.",
				"parameters": [
					{
						"name": "cursor",
						"example": null,
						"type": "UploadSessionCursor",
						"desc": "Contains the upload session ID and the offset.",
						"parameters": [
							{
								"name": "session_id",
								"example": null,
								"type": "String",
								"desc": "The upload session ID (returned by  )."
							},
							{
								"name": "offset",
								"example": null,
								"type": "UInt64",
								"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
							}
						]
					},
					{
						"name": "session_id",
						"example": null,
						"type": "String",
						"desc": "The upload session ID (returned by  )."
					},
					{
						"name": "offset",
						"example": null,
						"type": "UInt64",
						"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
					},
					{
						"name": "commit",
						"example": null,
						"type": "CommitInfo",
						"desc": "Contains the path and other optional modifiers for the commit.",
						"parameters": [
							{
								"name": "path",
								"example": null,
								"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
								"desc": "Path in the user's Dropbox to save the file."
							},
							{
								"name": "mode",
								"example": null,
								"type": "WriteMode",
								"desc": "Selects what to do if the file already exists. The default for this union is add.",
								"parameters": [
									{
										"name": "add",
										"example": null,
										"type": "Void",
										"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
									},
									{
										"name": "overwrite",
										"example": null,
										"type": "Void",
										"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
									},
									{
										"name": "update",
										"example": null,
										"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
										"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
									}
								]
							},
							{
								"name": "add",
								"example": null,
								"type": "Void",
								"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"example": null,
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"example": null,
								"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							},
							{
								"name": "autorename",
								"example": null,
								"type": "Boolean",
								"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
							},
							{
								"name": "client_modified",
								"example": null,
								"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
								"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
							},
							{
								"name": "mute",
								"example": null,
								"type": "Boolean",
								"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
							},
							{
								"name": "add",
								"example": null,
								"type": "Void",
								"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"example": null,
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"example": null,
								"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							}
						]
					},
					{
						"name": "path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to save the file."
					},
					{
						"name": "mode",
						"example": null,
						"type": "WriteMode",
						"desc": "Selects what to do if the file already exists. The default for this union is add.",
						"parameters": [
							{
								"name": "add",
								"example": null,
								"type": "Void",
								"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"example": null,
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"example": null,
								"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							}
						]
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					},
					{
						"name": "autorename",
						"example": null,
						"type": "Boolean",
						"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
					},
					{
						"name": "client_modified",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
						"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
					},
					{
						"name": "mute",
						"example": null,
						"type": "Boolean",
						"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
					},
					{
						"name": "session_id",
						"example": null,
						"type": "String",
						"desc": "The upload session ID (returned by  )."
					},
					{
						"name": "offset",
						"example": null,
						"type": "UInt64",
						"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
					},
					{
						"name": "path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to save the file."
					},
					{
						"name": "mode",
						"example": null,
						"type": "WriteMode",
						"desc": "Selects what to do if the file already exists. The default for this union is add.",
						"parameters": [
							{
								"name": "add",
								"example": null,
								"type": "Void",
								"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"example": null,
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"example": null,
								"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							}
						]
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					},
					{
						"name": "autorename",
						"example": null,
						"type": "Boolean",
						"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
					},
					{
						"name": "client_modified",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
						"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
					},
					{
						"name": "mute",
						"example": null,
						"type": "Boolean",
						"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "cursor",
				"type": "UploadSessionCursor",
				"desc": "Contains the upload session ID and the offset.",
				"parameters": [
					{
						"name": "session_id",
						"example": null,
						"type": "String",
						"desc": "The upload session ID (returned by  )."
					},
					{
						"name": "offset",
						"example": null,
						"type": "UInt64",
						"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
					}
				]
			},
			{
				"name": "session_id",
				"type": "String",
				"desc": "The upload session ID (returned by  )."
			},
			{
				"name": "offset",
				"type": "UInt64",
				"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
			},
			{
				"name": "commit",
				"type": "CommitInfo",
				"desc": "Contains the path and other optional modifiers for the commit.",
				"parameters": [
					{
						"name": "path",
						"example": null,
						"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
						"desc": "Path in the user's Dropbox to save the file."
					},
					{
						"name": "mode",
						"example": null,
						"type": "WriteMode",
						"desc": "Selects what to do if the file already exists. The default for this union is add.",
						"parameters": [
							{
								"name": "add",
								"example": null,
								"type": "Void",
								"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"example": null,
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"example": null,
								"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							}
						]
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					},
					{
						"name": "autorename",
						"example": null,
						"type": "Boolean",
						"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
					},
					{
						"name": "client_modified",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
						"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
					},
					{
						"name": "mute",
						"example": null,
						"type": "Boolean",
						"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
					},
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "Path in the user's Dropbox to save the file."
			},
			{
				"name": "mode",
				"type": "WriteMode",
				"desc": "Selects what to do if the file already exists. The default for this union is add.",
				"parameters": [
					{
						"name": "add",
						"example": null,
						"type": "Void",
						"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"example": null,
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"example": null,
						"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "add",
				"type": "Void",
				"desc": "Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
			},
			{
				"name": "overwrite",
				"type": "Void",
				"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
			},
			{
				"name": "update",
				"type": "String(min_length=9, pattern=\"[0-9a-f]+\")",
				"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
			},
			{
				"name": "autorename",
				"type": "Boolean",
				"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
			},
			{
				"name": "client_modified",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
				"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
			},
			{
				"name": "mute",
				"type": "Boolean",
				"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If true, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				}
			]
		}
	},
	"files/upload_session/finish_batch/check": {
		"uri": "https://api.dropboxapi.com/2/files/upload_session/finish_batch/check",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"entries": [
				{
					".tag": "success",
					"name": "Prime_Numbers.txt",
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"path_lower": "/homework/math/prime_numbers.txt",
					"path_display": "/Homework/math/Prime_Numbers.txt",
					"sharing_info": {
						"read_only": true,
						"parent_shared_folder_id": "84528192421",
						"modified_by": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc"
					},
					"property_groups": [
						{
							"template_id": "ptid:1a5n2i6d3OYEAAAAAAAAAYa",
							"fields": [
								{
									"name": "Security Policy",
									"value": "Confidential"
								}
							]
						}
					],
					"has_explicit_shared_members": false,
					"content_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
				}
			]
		}
	},
	"files/upload_session/start": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/start",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"endpointFormat": "content-upload",
		"parameters": [
			{
				"name": "close",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the current session will be closed, at which point you won't be able to call   anymore with the current session. The default for this field is False."
			}
		],
		"returnParameters": {
			"session_id": "1234faaf0678bcde"
		}
	},
	"paper/docs/archive": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/archive",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			}
		],
		"returnParameters": null
	},
	"paper/docs/download": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "content-download",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "export_format",
				"example": "markdown",
				"type": "ExportFormat",
				"desc": "",
				"parameters": [
					{
						"name": "html",
						"example": null,
						"type": "Void",
						"desc": "The HTML export format."
					},
					{
						"name": "markdown",
						"example": null,
						"type": "Void",
						"desc": "The markdown export format."
					}
				]
			},
			{
				"name": "html",
				"type": "Void",
				"desc": "The HTML export format."
			},
			{
				"name": "markdown",
				"type": "Void",
				"desc": "The markdown export format."
			}
		],
		"returnParameters": {
			"owner": "james@example.com",
			"title": "Week one retention",
			"revision": 456736745,
			"mime_type": "text/x-markdown"
		}
	},
	"paper/docs/folder_users/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/folder_users/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "limit",
				"example": 100,
				"type": "Int32",
				"desc": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
			}
		],
		"returnParameters": {
			"invitees": [
				{
					".tag": "email",
					"email": "jessica@example.com"
				}
			],
			"users": [
				{
					"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"same_team": true,
					"team_member_id": "dbmid:abcd1234"
				}
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/folder_users/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/folder_users/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "cursor",
				"example": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd",
				"type": "String",
				"desc": "The cursor obtained from   or  . Allows for pagination."
			}
		],
		"returnParameters": {
			"invitees": [
				{
					".tag": "email",
					"email": "jessica@example.com"
				}
			],
			"users": [
				{
					"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"same_team": true,
					"team_member_id": "dbmid:abcd1234"
				}
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/get_folder_info": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/get_folder_info",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			}
		],
		"returnParameters": {
			"folder_sharing_policy_type": {
				".tag": "team"
			},
			"folders": [
				{
					"id": "e.gGYT6HSafpMej9bUv306oGm60vrHiCHgEFnzziioPGCvHf",
					"name": "Design docs"
				}
			]
		}
	},
	"paper/docs/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "filter_by",
				"example": "docs_created",
				"type": "ListPaperDocsFilterBy",
				"desc": "Allows user to specify how the Paper docs should be filtered. The default for this union is docs_accessed.",
				"parameters": [
					{
						"name": "docs_accessed",
						"example": null,
						"type": "Void",
						"desc": "Fetches all Paper doc ids that the user has ever accessed."
					},
					{
						"name": "docs_created",
						"example": null,
						"type": "Void",
						"desc": "Fetches only the Paper doc ids that the user has created."
					}
				]
			},
			{
				"name": "docs_accessed",
				"type": "Void",
				"desc": "Fetches all Paper doc ids that the user has ever accessed."
			},
			{
				"name": "docs_created",
				"type": "Void",
				"desc": "Fetches only the Paper doc ids that the user has created."
			},
			{
				"name": "sort_by",
				"example": "modified",
				"type": "ListPaperDocsSortBy",
				"desc": "Allows user to specify how the Paper docs should be sorted. The default for this union is accessed.",
				"parameters": [
					{
						"name": "accessed",
						"example": null,
						"type": "Void",
						"desc": "Sorts the Paper docs by the time they were last accessed."
					},
					{
						"name": "modified",
						"example": null,
						"type": "Void",
						"desc": "Sorts the Paper docs by the time they were last modified."
					},
					{
						"name": "created",
						"example": null,
						"type": "Void",
						"desc": "Sorts the Paper docs by the creation time."
					}
				]
			},
			{
				"name": "accessed",
				"type": "Void",
				"desc": "Sorts the Paper docs by the time they were last accessed."
			},
			{
				"name": "modified",
				"type": "Void",
				"desc": "Sorts the Paper docs by the time they were last modified."
			},
			{
				"name": "created",
				"type": "Void",
				"desc": "Sorts the Paper docs by the creation time."
			},
			{
				"name": "sort_order",
				"example": "descending",
				"type": "ListPaperDocsSortOrder",
				"desc": "Allows user to specify the sort order of the result. The default for this union is ascending.",
				"parameters": [
					{
						"name": "ascending",
						"example": null,
						"type": "Void",
						"desc": "Sorts the search result in ascending order."
					},
					{
						"name": "descending",
						"example": null,
						"type": "Void",
						"desc": "Sorts the search result in descending order."
					}
				]
			},
			{
				"name": "ascending",
				"type": "Void",
				"desc": "Sorts the search result in ascending order."
			},
			{
				"name": "descending",
				"type": "Void",
				"desc": "Sorts the search result in descending order."
			},
			{
				"name": "limit",
				"example": 100,
				"type": "Int32",
				"desc": "Size limit per batch. The maximum number of docs that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
			}
		],
		"returnParameters": {
			"doc_ids": [
				"zO1E7coc54sE8IuMdUoxz",
				"mm1AmDgVyZ10zf7qb0qzn",
				"dByYHZvTPBnXilGgyc5mm"
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": true
		}
	},
	"paper/docs/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd",
				"type": "String",
				"desc": "The cursor obtained from   or  . Allows for pagination."
			}
		],
		"returnParameters": {
			"doc_ids": [
				"zO1E7coc54sE8IuMdUoxz",
				"mm1AmDgVyZ10zf7qb0qzn",
				"dByYHZvTPBnXilGgyc5mm"
			],
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": true
		}
	},
	"paper/docs/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			}
		],
		"returnParameters": null
	},
	"paper/docs/sharing_policy/get": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/sharing_policy/get",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			}
		],
		"returnParameters": {
			"public_sharing_policy": {
				".tag": "people_with_link_can_edit"
			},
			"team_sharing_policy": {
				".tag": "people_with_link_can_edit"
			}
		}
	},
	"paper/docs/sharing_policy/set": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/sharing_policy/set",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "sharing_policy",
				"example": {
					"public_sharing_policy": "people_with_link_can_edit",
					"team_sharing_policy": "people_with_link_can_edit"
				},
				"type": "SharingPolicy",
				"desc": "The default sharing policy to be set for the Paper doc.",
				"parameters": [
					{
						"name": "public_sharing_policy",
						"example": null,
						"type": "SharingPublicPolicyType?",
						"desc": "This value applies to the non-team members. This field is optional.",
						"parameters": [
							{
								"name": "people_with_link_can_edit",
								"example": null,
								"type": "Void",
								"desc": "Users who have a link to this doc can edit it."
							},
							{
								"name": "people_with_link_can_view_and_comment",
								"example": null,
								"type": "Void",
								"desc": "Users who have a link to this doc can view and comment on it."
							},
							{
								"name": "invite_only",
								"example": null,
								"type": "Void",
								"desc": "Users must be explicitly invited to this doc."
							},
							{
								"name": "disabled",
								"example": null,
								"type": "Void",
								"desc": "Value used to indicate that doc sharing is enabled only within team."
							}
						]
					},
					{
						"name": "people_with_link_can_edit",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can edit it."
					},
					{
						"name": "people_with_link_can_view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can view and comment on it."
					},
					{
						"name": "invite_only",
						"example": null,
						"type": "Void",
						"desc": "Users must be explicitly invited to this doc."
					},
					{
						"name": "disabled",
						"example": null,
						"type": "Void",
						"desc": "Value used to indicate that doc sharing is enabled only within team."
					},
					{
						"name": "team_sharing_policy",
						"example": null,
						"type": "SharingTeamPolicyType?",
						"desc": "This value applies to the team members only. The value is null for all personal accounts. This field is optional.",
						"parameters": [
							{
								"name": "people_with_link_can_edit",
								"example": null,
								"type": "Void",
								"desc": "Users who have a link to this doc can edit it."
							},
							{
								"name": "people_with_link_can_view_and_comment",
								"example": null,
								"type": "Void",
								"desc": "Users who have a link to this doc can view and comment on it."
							},
							{
								"name": "invite_only",
								"example": null,
								"type": "Void",
								"desc": "Users must be explicitly invited to this doc."
							}
						]
					},
					{
						"name": "people_with_link_can_edit",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can edit it."
					},
					{
						"name": "people_with_link_can_view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can view and comment on it."
					},
					{
						"name": "invite_only",
						"example": null,
						"type": "Void",
						"desc": "Users must be explicitly invited to this doc."
					},
					{
						"name": "people_with_link_can_edit",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can edit it."
					},
					{
						"name": "people_with_link_can_view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can view and comment on it."
					},
					{
						"name": "invite_only",
						"example": null,
						"type": "Void",
						"desc": "Users must be explicitly invited to this doc."
					},
					{
						"name": "disabled",
						"example": null,
						"type": "Void",
						"desc": "Value used to indicate that doc sharing is enabled only within team."
					},
					{
						"name": "people_with_link_can_edit",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can edit it."
					},
					{
						"name": "people_with_link_can_view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can view and comment on it."
					},
					{
						"name": "invite_only",
						"example": null,
						"type": "Void",
						"desc": "Users must be explicitly invited to this doc."
					}
				]
			},
			{
				"name": "public_sharing_policy",
				"type": "SharingPublicPolicyType?",
				"desc": "This value applies to the non-team members. This field is optional.",
				"parameters": [
					{
						"name": "people_with_link_can_edit",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can edit it."
					},
					{
						"name": "people_with_link_can_view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can view and comment on it."
					},
					{
						"name": "invite_only",
						"example": null,
						"type": "Void",
						"desc": "Users must be explicitly invited to this doc."
					},
					{
						"name": "disabled",
						"example": null,
						"type": "Void",
						"desc": "Value used to indicate that doc sharing is enabled only within team."
					}
				]
			},
			{
				"name": "people_with_link_can_edit",
				"type": "Void",
				"desc": "Users who have a link to this doc can edit it."
			},
			{
				"name": "people_with_link_can_view_and_comment",
				"type": "Void",
				"desc": "Users who have a link to this doc can view and comment on it."
			},
			{
				"name": "invite_only",
				"type": "Void",
				"desc": "Users must be explicitly invited to this doc."
			},
			{
				"name": "disabled",
				"type": "Void",
				"desc": "Value used to indicate that doc sharing is enabled only within team."
			},
			{
				"name": "team_sharing_policy",
				"type": "SharingTeamPolicyType?",
				"desc": "This value applies to the team members only. The value is null for all personal accounts. This field is optional.",
				"parameters": [
					{
						"name": "people_with_link_can_edit",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can edit it."
					},
					{
						"name": "people_with_link_can_view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "Users who have a link to this doc can view and comment on it."
					},
					{
						"name": "invite_only",
						"example": null,
						"type": "Void",
						"desc": "Users must be explicitly invited to this doc."
					}
				]
			},
			{
				"name": "people_with_link_can_edit",
				"type": "Void",
				"desc": "Users who have a link to this doc can edit it."
			},
			{
				"name": "people_with_link_can_view_and_comment",
				"type": "Void",
				"desc": "Users who have a link to this doc can view and comment on it."
			},
			{
				"name": "invite_only",
				"type": "Void",
				"desc": "Users must be explicitly invited to this doc."
			}
		],
		"returnParameters": null
	},
	"paper/docs/users/add": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/add",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "members",
				"example": [
					{
						"member": {
							".tag": "email",
							"email": "justin@example.com"
						},
						"permission_level": {
							".tag": "view_and_comment"
						}
					}
				],
				"type": "List of (AddMember, max_items=20)",
				"desc": "User which should be added to the Paper doc. Specify only email or Dropbox account id.",
				"parameters": [
					{
						"name": "member",
						"example": null,
						"type": "MemberSelector",
						"desc": "User which should be added to the Paper doc. Specify only email or Dropbox account id.",
						"parameters": [
							{
								"name": "dropbox_id",
								"example": null,
								"type": "String(min_length=1)",
								"desc": "Dropbox account, team member, or group ID of member."
							},
							{
								"name": "email",
								"example": null,
								"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
								"desc": "E-mail address of member."
							}
						]
					},
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					},
					{
						"name": "permission_level",
						"example": null,
						"type": "PaperDocPermissionLevel",
						"desc": "Permission for the user. The default for this union is edit.",
						"parameters": [
							{
								"name": "edit",
								"example": null,
								"type": "Void",
								"desc": "User will be granted edit permissions."
							},
							{
								"name": "view_and_comment",
								"example": null,
								"type": "Void",
								"desc": "User will be granted view and comment permissions."
							}
						]
					},
					{
						"name": "edit",
						"example": null,
						"type": "Void",
						"desc": "User will be granted edit permissions."
					},
					{
						"name": "view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "User will be granted view and comment permissions."
					},
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					},
					{
						"name": "edit",
						"example": null,
						"type": "Void",
						"desc": "User will be granted edit permissions."
					},
					{
						"name": "view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "User will be granted view and comment permissions."
					}
				]
			},
			{
				"name": "member",
				"type": "MemberSelector",
				"desc": "User which should be added to the Paper doc. Specify only email or Dropbox account id.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "permission_level",
				"type": "PaperDocPermissionLevel",
				"desc": "Permission for the user. The default for this union is edit.",
				"parameters": [
					{
						"name": "edit",
						"example": null,
						"type": "Void",
						"desc": "User will be granted edit permissions."
					},
					{
						"name": "view_and_comment",
						"example": null,
						"type": "Void",
						"desc": "User will be granted view and comment permissions."
					}
				]
			},
			{
				"name": "edit",
				"type": "Void",
				"desc": "User will be granted edit permissions."
			},
			{
				"name": "view_and_comment",
				"type": "Void",
				"desc": "User will be granted view and comment permissions."
			},
			{
				"name": "custom_message",
				"example": "Welcome to Paper.",
				"type": "String?",
				"desc": "A personal message that will be emailed to each successfully added member. This field is optional."
			},
			{
				"name": "quiet",
				"example": false,
				"type": "Boolean",
				"desc": "Clients should set this to true if no email shall be sent to added users. The default for this field is False."
			}
		],
		"returnParameters": null
	},
	"paper/docs/users/list": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/list",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "limit",
				"example": 100,
				"type": "Int32",
				"desc": "Size limit per batch. The maximum number of users that can be retrieved per batch is 1000. Higher value results in invalid arguments error. The default for this field is 1000."
			},
			{
				"name": "filter_by",
				"example": "shared",
				"type": "UserOnPaperDocFilter",
				"desc": "Specify this attribute if you want to obtain users that have already accessed the Paper doc. The default for this union is shared.",
				"parameters": [
					{
						"name": "visited",
						"example": null,
						"type": "Void",
						"desc": "all users who have visited the Paper doc."
					},
					{
						"name": "shared",
						"example": null,
						"type": "Void",
						"desc": "All uses who are shared on the Paper doc. This includes all users who have visited the Paper doc as well as those who have not."
					}
				]
			},
			{
				"name": "visited",
				"type": "Void",
				"desc": "all users who have visited the Paper doc."
			},
			{
				"name": "shared",
				"type": "Void",
				"desc": "All uses who are shared on the Paper doc. This includes all users who have visited the Paper doc as well as those who have not."
			}
		],
		"returnParameters": {
			"invitees": [
				{
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permission_level": {
						".tag": "edit"
					}
				}
			],
			"users": [
				{
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permission_level": {
						".tag": "view_and_comment"
					}
				}
			],
			"doc_owner": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"same_team": true,
				"team_member_id": "dbmid:abcd1234"
			},
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/users/list/continue": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/list/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "cursor",
				"example": "U60b6BxT43ySd5sAVQbbIvoteSnWLjUdLU7aR25hbt3ySd5sAVQbbIvoteSnWLjUd",
				"type": "String",
				"desc": "The cursor obtained from   or  . Allows for pagination."
			}
		],
		"returnParameters": {
			"invitees": [
				{
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permission_level": {
						".tag": "edit"
					}
				}
			],
			"users": [
				{
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permission_level": {
						".tag": "view_and_comment"
					}
				}
			],
			"doc_owner": {
				"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"same_team": true,
				"team_member_id": "dbmid:abcd1234"
			},
			"cursor": {
				"value": "zHZvTPBnXilGgm1AmDgVyZ10zf7qb0qznd5sAVQbbIvoteSnWLjUdLU7aR25hb",
				"expiration": "2016-08-07T14:56:15Z"
			},
			"has_more": false
		}
	},
	"paper/docs/users/remove": {
		"uri": "https://api.dropboxapi.com/2/paper/docs/users/remove",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "doc_id",
				"example": "uaSvRuxvnkFa12PTkBv5q",
				"type": "String",
				"desc": ""
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "User which should be removed from the Paper doc. Specify only email or Dropbox account id.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			}
		],
		"returnParameters": null
	},
	"sharing/add_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "File to which to add members."
			},
			{
				"name": "members",
				"example": [
					{
						".tag": "email",
						"email": "justin@example.com"
					}
				],
				"type": "List of (MemberSelector)",
				"desc": "Members to add. Note that even an email address is given, this may result in a user being directy added to the membership if that email is the user's main account email.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "custom_message",
				"example": "This is a custom message about ACME.doc",
				"type": "String?",
				"desc": "Message to send to added members in their invitation. This field is optional."
			},
			{
				"name": "quiet",
				"example": false,
				"type": "Boolean",
				"desc": "Whether added members should be notified via device notifications of their invitation. The default for this field is False."
			},
			{
				"name": "access_level",
				"example": "viewer",
				"type": "AccessLevel",
				"desc": "AccessLevel union object, describing what access level we want to give new members. The default for this union is viewer.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			},
			{
				"name": "viewer_no_comment",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder and does not have any access to comments."
			},
			{
				"name": "add_message_as_comment",
				"example": false,
				"type": "Boolean",
				"desc": "If the custom message should be added as a comment on the file. The default for this field is False."
			}
		],
		"returnParameters": null
	},
	"sharing/add_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "members",
				"example": [
					{
						"member": {
							".tag": "email",
							"email": "justin@example.com"
						},
						"access_level": {
							".tag": "editor"
						}
					},
					{
						"member": {
							".tag": "dropbox_id",
							"dropbox_id": "dbid:AAEufNrMPSPe0dMQijRP0N_aZtBJRm26W4Q"
						},
						"access_level": {
							".tag": "viewer"
						}
					}
				],
				"type": "List of (AddMember)",
				"desc": "The intended list of members to add.  Added members will receive invites to join the shared folder.",
				"parameters": [
					{
						"name": "member",
						"example": null,
						"type": "MemberSelector",
						"desc": "The member to add to the shared folder.",
						"parameters": [
							{
								"name": "dropbox_id",
								"example": null,
								"type": "String(min_length=1)",
								"desc": "Dropbox account, team member, or group ID of member."
							},
							{
								"name": "email",
								"example": null,
								"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
								"desc": "E-mail address of member."
							}
						]
					},
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					},
					{
						"name": "access_level",
						"example": null,
						"type": "AccessLevel",
						"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
						"parameters": [
							{
								"name": "owner",
								"example": null,
								"type": "Void",
								"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
							},
							{
								"name": "editor",
								"example": null,
								"type": "Void",
								"desc": "The collaborator can both view and edit the shared folder."
							},
							{
								"name": "viewer",
								"example": null,
								"type": "Void",
								"desc": "The collaborator can only view the shared folder."
							},
							{
								"name": "viewer_no_comment",
								"example": null,
								"type": "Void",
								"desc": "The collaborator can only view the shared folder and does not have any access to comments."
							}
						]
					},
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					},
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					},
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					}
				]
			},
			{
				"name": "member",
				"type": "MemberSelector",
				"desc": "The member to add to the shared folder.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "access_level",
				"type": "AccessLevel",
				"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			},
			{
				"name": "viewer_no_comment",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder and does not have any access to comments."
			},
			{
				"name": "quiet",
				"example": false,
				"type": "Boolean",
				"desc": "Whether added members should be notified via email and device notifications of their invite. The default for this field is False."
			},
			{
				"name": "custom_message",
				"example": "Documentation for launch day",
				"type": "String(min_length=1)?",
				"desc": "Optional message to display to added members in their invitation. This field is optional."
			}
		],
		"returnParameters": null
	},
	"sharing/change_file_member_access": {
		"uri": "https://api.dropboxapi.com/2/sharing/change_file_member_access",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "File for which we are changing a member's access."
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "The member whose access we are changing.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "access_level",
				"example": "viewer",
				"type": "AccessLevel",
				"desc": "The new access level for the member.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			},
			{
				"name": "viewer_no_comment",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder and does not have any access to comments."
			}
		],
		"returnParameters": null
	},
	"sharing/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "in_progress"
		}
	},
	"sharing/check_remove_member_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_remove_member_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/check_share_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_share_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "async_job_id",
				"example": "34g93hh34h04y384084",
				"type": "String(min_length=1)",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/create_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Homework/Math/Prime_Numbers.txt",
				"type": "String",
				"desc": "The path to share."
			},
			{
				"name": "short_url",
				"example": false,
				"type": "Boolean",
				"desc": "Whether to return a shortened URL. The default for this field is False."
			},
			{
				"name": "pending_upload",
				"type": "PendingUploadMode?",
				"desc": "If it's okay to share a path that does not yet exist, set this to either PendingUploadMode.file or PendingUploadMode.folder to indicate whether to assume it's a file or folder. This field is optional.",
				"parameters": [
					{
						"name": "file",
						"example": null,
						"type": "Void",
						"desc": "Assume pending uploads are files."
					},
					{
						"name": "folder",
						"example": null,
						"type": "Void",
						"desc": "Assume pending uploads are folders."
					}
				]
			},
			{
				"name": "file",
				"type": "Void",
				"desc": "Assume pending uploads are files."
			},
			{
				"name": "folder",
				"type": "Void",
				"desc": "Assume pending uploads are folders."
			}
		],
		"returnParameters": {
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"visibility": {
				".tag": "public"
			},
			"path": "/Homework/Math/Prime_Numbers.txt"
		}
	},
	"sharing/create_shared_link_with_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/Prime_Numbers.txt",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to be shared by the shared link"
			},
			{
				"name": "settings",
				"example": {
					"requested_visibility": "public"
				},
				"type": "SharedLinkSettings?",
				"desc": "The requested settings for the newly created shared link This field is optional.",
				"parameters": [
					{
						"name": "requested_visibility",
						"example": null,
						"type": "RequestedVisibility?",
						"desc": "The requested access for this shared link. This field is optional.",
						"parameters": [
							{
								"name": "public",
								"example": null,
								"type": "Void",
								"desc": "Anyone who has received the link can access it. No login required."
							},
							{
								"name": "team_only",
								"example": null,
								"type": "Void",
								"desc": "Only members of the same team can access the link. Login is required."
							},
							{
								"name": "password",
								"example": null,
								"type": "Void",
								"desc": "A link-specific password is required to access the link. Login is not required."
							}
						]
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"example": null,
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"example": null,
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					},
					{
						"name": "link_password",
						"example": null,
						"type": "String?",
						"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
					},
					{
						"name": "expires",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
						"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"example": null,
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"example": null,
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "requested_visibility",
				"type": "RequestedVisibility?",
				"desc": "The requested access for this shared link. This field is optional.",
				"parameters": [
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"example": null,
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"example": null,
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "public",
				"type": "Void",
				"desc": "Anyone who has received the link can access it. No login required."
			},
			{
				"name": "team_only",
				"type": "Void",
				"desc": "Only members of the same team can access the link. Login is required."
			},
			{
				"name": "password",
				"type": "Void",
				"desc": "A link-specific password is required to access the link. Login is not required."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
			},
			{
				"name": "expires",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
				"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
			}
		],
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_file_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_file_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "The file to query."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (FileAction)?",
				"desc": "File actions to query. This field is optional.",
				"parameters": [
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information on the file."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the file."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the file."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Add a member with view permissions."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Add a member with view permissions but no comment permissions."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this file."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership to the file."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link to the file."
					}
				]
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information on the file."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the file."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the file."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Add a member with view permissions."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Add a member with view permissions but no comment permissions."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this file."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership to the file."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link to the file."
			}
		],
		"returnParameters": {
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
			"name": "file.txt",
			"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
			"permissions": [],
			"owner_team": {
				"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
				"name": "Acme, Inc."
			},
			"path_lower": "/dir/file.txt",
			"path_display": "/dir/file.txt",
			"time_invited": "2016-01-20T00:00:00Z"
		}
	},
	"sharing/get_file_metadata/batch": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_file_metadata/batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "files",
				"example": [
					"id:3kmLmQFnf1AAAAAAAAAAAw",
					"id:VvTaJu2VZzAAAAAAAAAADQ"
				],
				"type": "List of (String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\"), max_items=100)",
				"desc": "The files to query."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (FileAction)?",
				"desc": "File actions to query. This field is optional.",
				"parameters": [
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information on the file."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the file."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the file."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Add a member with view permissions."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Add a member with view permissions but no comment permissions."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this file."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership to the file."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link to the file."
					}
				]
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information on the file."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the file."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the file."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Add a member with view permissions."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Add a member with view permissions but no comment permissions."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this file."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership to the file."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link to the file."
			}
		],
		"returnParameters": null
	},
	"sharing/get_folder_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_folder_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (FolderAction)?",
				"desc": "This is a list indicating whether the returned folder data will include a boolean value  FolderPermission.allow that describes whether the current user can perform the  FolderAction on the folder. This field is optional.",
				"parameters": [
					{
						"name": "change_options",
						"example": null,
						"type": "Void",
						"desc": "Change folder options, such as who can be invited to join the folder."
					},
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information for this folder."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the folder."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the folder."
					},
					{
						"name": "invite_editor",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read and write permission."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership in the folder."
					},
					{
						"name": "unmount",
						"example": null,
						"type": "Void",
						"desc": "Unmount the folder."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this folder."
					},
					{
						"name": "leave_a_copy",
						"example": null,
						"type": "Void",
						"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link for folder."
					}
				]
			},
			{
				"name": "change_options",
				"type": "Void",
				"desc": "Change folder options, such as who can be invited to join the folder."
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information for this folder."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the folder."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the folder."
			},
			{
				"name": "invite_editor",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read and write permission."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership in the folder."
			},
			{
				"name": "unmount",
				"type": "Void",
				"desc": "Unmount the folder."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this folder."
			},
			{
				"name": "leave_a_copy",
				"type": "Void",
				"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link for folder."
			}
		],
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/get_shared_link_file": {
		"uri": "https://content.dropboxapi.com/2/sharing/get_shared_link_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"endpointFormat": "content-download",
		"parameters": [
			{
				"name": "url",
				"example": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"type": "String",
				"desc": "URL of the shared link."
			},
			{
				"name": "path",
				"example": "/Prime_Numbers.txt",
				"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
				"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If the shared link has a password, this parameter can be used. This field is optional."
			}
		],
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_shared_link_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_link_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "url",
				"example": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"type": "String",
				"desc": "URL of the shared link."
			},
			{
				"name": "path",
				"example": "/Prime_Numbers.txt",
				"type": "String(pattern=\"/(.|[\\r\\n])*\")?",
				"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If the shared link has a password, this parameter can be used. This field is optional."
			}
		],
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/get_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "",
				"type": "String?",
				"desc": "See   description. This field is optional."
			}
		],
		"returnParameters": null
	},
	"sharing/list_file_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "The file for which you want to see members."
			},
			{
				"name": "actions",
				"type": "List of (MemberAction)?",
				"desc": "The actions for which to return permissions on a member. This field is optional.",
				"parameters": [
					{
						"name": "leave_a_copy",
						"example": null,
						"type": "Void",
						"desc": "Allow the member to keep a copy of the folder when removing."
					},
					{
						"name": "make_editor",
						"example": null,
						"type": "Void",
						"desc": "Make the member an editor of the folder."
					},
					{
						"name": "make_owner",
						"example": null,
						"type": "Void",
						"desc": "Make the member an owner of the folder."
					},
					{
						"name": "make_viewer",
						"example": null,
						"type": "Void",
						"desc": "Make the member a viewer of the folder."
					},
					{
						"name": "make_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Make the member a viewer of the folder without commenting permissions."
					},
					{
						"name": "remove",
						"example": null,
						"type": "Void",
						"desc": "Remove the member from the folder."
					}
				]
			},
			{
				"name": "leave_a_copy",
				"type": "Void",
				"desc": "Allow the member to keep a copy of the folder when removing."
			},
			{
				"name": "make_editor",
				"type": "Void",
				"desc": "Make the member an editor of the folder."
			},
			{
				"name": "make_owner",
				"type": "Void",
				"desc": "Make the member an owner of the folder."
			},
			{
				"name": "make_viewer",
				"type": "Void",
				"desc": "Make the member a viewer of the folder."
			},
			{
				"name": "make_viewer_no_comment",
				"type": "Void",
				"desc": "Make the member a viewer of the folder without commenting permissions."
			},
			{
				"name": "remove",
				"type": "Void",
				"desc": "Remove the member from the folder."
			},
			{
				"name": "include_inherited",
				"example": true,
				"type": "Boolean",
				"desc": "Whether to include members who only have access from a parent shared folder. The default for this field is True."
			},
			{
				"name": "limit",
				"example": 100,
				"type": "UInt32",
				"desc": "Number of members to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100."
			}
		],
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			]
		}
	},
	"sharing/list_file_members/batch": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members/batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "files",
				"example": [
					"id:3kmLmQFnf1AAAAAAAAAAAw",
					"id:VvTaJu2VZzAAAAAAAAAADQ"
				],
				"type": "List of (String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\"), max_items=100)",
				"desc": "Files for which to return members."
			},
			{
				"name": "limit",
				"example": 10,
				"type": "UInt32",
				"desc": "Number of members to return max per query. Defaults to 10 if no limit is specified. The default for this field is 10."
			}
		],
		"returnParameters": null
	},
	"sharing/list_file_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_file_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String",
				"desc": "The cursor returned by your last call to  ,  , or  ."
			}
		],
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			]
		}
	},
	"sharing/list_folder_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (MemberAction)?",
				"desc": "This is a list indicating whether each returned member will include a boolean value MemberPermission.allow that describes whether the current user can perform the MemberAction on the member. This field is optional.",
				"parameters": [
					{
						"name": "leave_a_copy",
						"example": null,
						"type": "Void",
						"desc": "Allow the member to keep a copy of the folder when removing."
					},
					{
						"name": "make_editor",
						"example": null,
						"type": "Void",
						"desc": "Make the member an editor of the folder."
					},
					{
						"name": "make_owner",
						"example": null,
						"type": "Void",
						"desc": "Make the member an owner of the folder."
					},
					{
						"name": "make_viewer",
						"example": null,
						"type": "Void",
						"desc": "Make the member a viewer of the folder."
					},
					{
						"name": "make_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Make the member a viewer of the folder without commenting permissions."
					},
					{
						"name": "remove",
						"example": null,
						"type": "Void",
						"desc": "Remove the member from the folder."
					}
				]
			},
			{
				"name": "leave_a_copy",
				"type": "Void",
				"desc": "Allow the member to keep a copy of the folder when removing."
			},
			{
				"name": "make_editor",
				"type": "Void",
				"desc": "Make the member an editor of the folder."
			},
			{
				"name": "make_owner",
				"type": "Void",
				"desc": "Make the member an owner of the folder."
			},
			{
				"name": "make_viewer",
				"type": "Void",
				"desc": "Make the member a viewer of the folder."
			},
			{
				"name": "make_viewer_no_comment",
				"type": "Void",
				"desc": "Make the member a viewer of the folder without commenting permissions."
			},
			{
				"name": "remove",
				"type": "Void",
				"desc": "Remove the member from the folder."
			},
			{
				"name": "limit",
				"example": 10,
				"type": "UInt32",
				"desc": "The maximum number of results that include members, groups and invitees to return per request. The default for this field is 1000."
			}
		],
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folder_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String",
				"desc": "The cursor returned by your last call to   or  ."
			}
		],
		"returnParameters": {
			"users": [
				{
					"access_type": {
						".tag": "owner"
					},
					"user": {
						"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
						"same_team": true,
						"team_member_id": "dbmid:abcd1234"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"groups": [
				{
					"access_type": {
						".tag": "editor"
					},
					"group": {
						"group_name": "Test group",
						"group_id": "g:e2db7665347abcd600000000001a2b3c",
						"group_management_type": {
							".tag": "user_managed"
						},
						"group_type": {
							".tag": "user_managed"
						},
						"is_member": false,
						"is_owner": false,
						"same_team": true,
						"member_count": 10
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"invitees": [
				{
					"access_type": {
						".tag": "viewer"
					},
					"invitee": {
						".tag": "email",
						"email": "jessica@example.com"
					},
					"permissions": [],
					"is_inherited": false
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "limit",
				"example": 100,
				"type": "UInt32",
				"desc": "The maximum number of results to return per request. The default for this field is 1000."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (FolderAction)?",
				"desc": "This is a list indicating whether each returned folder data entry will include a boolean field FolderPermission.allow that describes whether the current user can perform the `FolderAction` on the folder. This field is optional.",
				"parameters": [
					{
						"name": "change_options",
						"example": null,
						"type": "Void",
						"desc": "Change folder options, such as who can be invited to join the folder."
					},
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information for this folder."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the folder."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the folder."
					},
					{
						"name": "invite_editor",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read and write permission."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership in the folder."
					},
					{
						"name": "unmount",
						"example": null,
						"type": "Void",
						"desc": "Unmount the folder."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this folder."
					},
					{
						"name": "leave_a_copy",
						"example": null,
						"type": "Void",
						"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link for folder."
					}
				]
			},
			{
				"name": "change_options",
				"type": "Void",
				"desc": "Change folder options, such as who can be invited to join the folder."
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information for this folder."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the folder."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the folder."
			},
			{
				"name": "invite_editor",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read and write permission."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership in the folder."
			},
			{
				"name": "unmount",
				"type": "Void",
				"desc": "Unmount the folder."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this folder."
			},
			{
				"name": "leave_a_copy",
				"type": "Void",
				"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link for folder."
			}
		],
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String",
				"desc": "The cursor returned by the previous API call specified in the endpoint description."
			}
		],
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_mountable_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_mountable_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "limit",
				"example": 100,
				"type": "UInt32",
				"desc": "The maximum number of results to return per request. The default for this field is 1000."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (FolderAction)?",
				"desc": "This is a list indicating whether each returned folder data entry will include a boolean field FolderPermission.allow that describes whether the current user can perform the `FolderAction` on the folder. This field is optional.",
				"parameters": [
					{
						"name": "change_options",
						"example": null,
						"type": "Void",
						"desc": "Change folder options, such as who can be invited to join the folder."
					},
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information for this folder."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the folder."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the folder."
					},
					{
						"name": "invite_editor",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read and write permission."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership in the folder."
					},
					{
						"name": "unmount",
						"example": null,
						"type": "Void",
						"desc": "Unmount the folder."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this folder."
					},
					{
						"name": "leave_a_copy",
						"example": null,
						"type": "Void",
						"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link for folder."
					}
				]
			},
			{
				"name": "change_options",
				"type": "Void",
				"desc": "Change folder options, such as who can be invited to join the folder."
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information for this folder."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the folder."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the folder."
			},
			{
				"name": "invite_editor",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read and write permission."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership in the folder."
			},
			{
				"name": "unmount",
				"type": "Void",
				"desc": "Unmount the folder."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this folder."
			},
			{
				"name": "leave_a_copy",
				"type": "Void",
				"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link for folder."
			}
		],
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_mountable_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_mountable_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String",
				"desc": "The cursor returned by the previous API call specified in the endpoint description."
			}
		],
		"returnParameters": {
			"entries": [
				{
					"access_type": {
						".tag": "owner"
					},
					"is_inside_team_folder": false,
					"is_team_folder": false,
					"name": "dir",
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
					"shared_folder_id": "84528192421",
					"time_invited": "2016-01-20T00:00:00Z",
					"path_lower": "/dir",
					"link_metadata": {
						"audience_options": [
							{
								".tag": "public"
							},
							{
								".tag": "team"
							},
							{
								".tag": "members"
							}
						],
						"current_audience": {
							".tag": "public"
						},
						"link_permissions": [
							{
								"action": {
									".tag": "change_audience"
								},
								"allow": true
							}
						],
						"password_protected": false,
						"url": ""
					},
					"permissions": []
				}
			],
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/list_received_files": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_received_files",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "limit",
				"example": 100,
				"type": "UInt32",
				"desc": "Number of files to return max per query. Defaults to 100 if no limit is specified. The default for this field is 100."
			},
			{
				"name": "actions",
				"example": [],
				"type": "List of (FileAction)?",
				"desc": "File actions to query. This field is optional.",
				"parameters": [
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information on the file."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the file."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the file."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Add a member with view permissions."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Add a member with view permissions but no comment permissions."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this file."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership to the file."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link to the file."
					}
				]
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information on the file."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the file."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the file."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Add a member with view permissions."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Add a member with view permissions but no comment permissions."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this file."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership to the file."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link to the file."
			}
		],
		"returnParameters": {
			"entries": [
				{
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
					"name": "file.txt",
					"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
					"permissions": [],
					"owner_team": {
						"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
						"name": "Acme, Inc."
					},
					"path_lower": "/dir/file.txt",
					"path_display": "/dir/file.txt",
					"time_invited": "2016-01-20T00:00:00Z"
				}
			],
			"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9cmV2aXNpb24H3Qf6o1fkHxQ"
		}
	},
	"sharing/list_received_files/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_received_files/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "cursor",
				"example": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9emfGRlc2MCRWxpbWl0BGRId",
				"type": "String",
				"desc": "Cursor in ListFilesResult.cursor."
			}
		],
		"returnParameters": {
			"entries": [
				{
					"policy": {
						"acl_update_policy": {
							".tag": "owner"
						},
						"shared_link_policy": {
							".tag": "anyone"
						},
						"member_policy": {
							".tag": "anyone"
						},
						"resolved_member_policy": {
							".tag": "team"
						}
					},
					"preview_url": "https://www.dropbox.com/scl/fi/fir9vjelf",
					"name": "file.txt",
					"id": "id:3kmLmQFnf1AAAAAAAAAAAw",
					"permissions": [],
					"owner_team": {
						"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
						"name": "Acme, Inc."
					},
					"path_lower": "/dir/file.txt",
					"path_display": "/dir/file.txt",
					"time_invited": "2016-01-20T00:00:00Z"
				}
			],
			"cursor": "AzJJbGlzdF90eXBdofe9c3RPbGlzdGFyZ3NfYnlfZ2lkMRhcbric7Rdog9cmV2aXNpb24H3Qf6o1fkHxQ"
		}
	},
	"sharing/list_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"type": "String(pattern=\"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)\")?",
				"desc": "See   description. This field is optional."
			},
			{
				"name": "cursor",
				"example": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu",
				"type": "String?",
				"desc": "The cursor returned by your last call to  . This field is optional."
			},
			{
				"name": "direct_only",
				"type": "Boolean?",
				"desc": "See   description. This field is optional."
			}
		],
		"returnParameters": {
			"links": [
				{
					".tag": "file",
					"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
					"name": "Prime_Numbers.txt",
					"link_permissions": {
						"can_revoke": false,
						"resolved_visibility": {
							".tag": "public"
						},
						"revoke_failure_reason": {
							".tag": "owner_only"
						}
					},
					"client_modified": "2015-05-12T15:50:38Z",
					"server_modified": "2015-05-12T15:50:38Z",
					"rev": "a1c10ce0dd78",
					"size": 7212,
					"id": "id:a4ayc_80_OEAAAAAAAAAXw",
					"path_lower": "/homework/math/prime_numbers.txt",
					"team_member_info": {
						"team_info": {
							"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
							"name": "Acme, Inc."
						},
						"display_name": "Roger Rabbit",
						"member_id": "dbmid:abcd1234"
					}
				}
			],
			"has_more": true,
			"cursor": "ZtkX9_EHj3x7PMkVuFIhwKYXEpwpLwyxp9vMKomUhllil9q7eWiAu"
		}
	},
	"sharing/modify_shared_link_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/modify_shared_link_settings",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "url",
				"example": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"type": "String",
				"desc": "URL of the shared link to change its settings"
			},
			{
				"name": "settings",
				"example": {
					"requested_visibility": "public"
				},
				"type": "SharedLinkSettings",
				"desc": "Set of settings for the shared link.",
				"parameters": [
					{
						"name": "requested_visibility",
						"example": null,
						"type": "RequestedVisibility?",
						"desc": "The requested access for this shared link. This field is optional.",
						"parameters": [
							{
								"name": "public",
								"example": null,
								"type": "Void",
								"desc": "Anyone who has received the link can access it. No login required."
							},
							{
								"name": "team_only",
								"example": null,
								"type": "Void",
								"desc": "Only members of the same team can access the link. Login is required."
							},
							{
								"name": "password",
								"example": null,
								"type": "Void",
								"desc": "A link-specific password is required to access the link. Login is not required."
							}
						]
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"example": null,
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"example": null,
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					},
					{
						"name": "link_password",
						"example": null,
						"type": "String?",
						"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
					},
					{
						"name": "expires",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
						"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"example": null,
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"example": null,
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "requested_visibility",
				"type": "RequestedVisibility?",
				"desc": "The requested access for this shared link. This field is optional.",
				"parameters": [
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"example": null,
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"example": null,
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "public",
				"type": "Void",
				"desc": "Anyone who has received the link can access it. No login required."
			},
			{
				"name": "team_only",
				"type": "Void",
				"desc": "Only members of the same team can access the link. Login is required."
			},
			{
				"name": "password",
				"type": "Void",
				"desc": "A link-specific password is required to access the link. Login is not required."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
			},
			{
				"name": "expires",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")?",
				"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
			},
			{
				"name": "remove_expiration",
				"example": false,
				"type": "Boolean",
				"desc": "If set to true, removes the expiration of the shared link. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "file",
			"url": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
			"name": "Prime_Numbers.txt",
			"link_permissions": {
				"can_revoke": false,
				"resolved_visibility": {
					".tag": "public"
				},
				"revoke_failure_reason": {
					".tag": "owner_only"
				}
			},
			"client_modified": "2015-05-12T15:50:38Z",
			"server_modified": "2015-05-12T15:50:38Z",
			"rev": "a1c10ce0dd78",
			"size": 7212,
			"id": "id:a4ayc_80_OEAAAAAAAAAXw",
			"path_lower": "/homework/math/prime_numbers.txt",
			"team_member_info": {
				"team_info": {
					"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
					"name": "Acme, Inc."
				},
				"display_name": "Roger Rabbit",
				"member_id": "dbmid:abcd1234"
			}
		}
	},
	"sharing/mount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/mount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID of the shared folder to mount."
			}
		],
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/relinquish_file_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_file_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "The path or id for the file."
			}
		],
		"returnParameters": null
	},
	"sharing/relinquish_folder_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_folder_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "leave_a_copy",
				"example": false,
				"type": "Boolean",
				"desc": "Keep a copy of the folder's contents upon relinquishing membership. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/remove_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "File from which to remove members."
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			}
		],
		"returnParameters": {
			".tag": "success"
		}
	},
	"sharing/remove_file_member_2": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_file_member_2",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "File from which to remove members."
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			}
		],
		"returnParameters": {
			".tag": "other"
		}
	},
	"sharing/remove_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "The member to remove from the folder.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "leave_a_copy",
				"example": false,
				"type": "Boolean",
				"desc": "If true, the removed user will keep their copy of the folder after it's unshared, assuming it was mounted. Otherwise, it will be removed from their Dropbox. Also, this must be set to false when kicking a group."
			}
		],
		"returnParameters": null
	},
	"sharing/revoke_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/revoke_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "url",
				"example": "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0",
				"type": "String",
				"desc": "URL of the shared link."
			}
		],
		"returnParameters": null
	},
	"sharing/share_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/share_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "path",
				"example": "/example/workspace",
				"type": "String(pattern=\"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)\")",
				"desc": "The path to the folder to share. If it does not exist, then a new one is created."
			},
			{
				"name": "member_policy",
				"example": "team",
				"type": "MemberPolicy?",
				"desc": "Who can be a member of this shared folder. Only applicable if the current user is on a team. This field is optional.",
				"parameters": [
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Only a teammate can become a member."
					},
					{
						"name": "anyone",
						"example": null,
						"type": "Void",
						"desc": "Anyone can become a member."
					}
				]
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Only a teammate can become a member."
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Anyone can become a member."
			},
			{
				"name": "acl_update_policy",
				"example": "editors",
				"type": "AclUpdatePolicy?",
				"desc": "Who can add and remove members of this shared folder. This field is optional.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "Only the owner can update the ACL."
					},
					{
						"name": "editors",
						"example": null,
						"type": "Void",
						"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "Only the owner can update the ACL."
			},
			{
				"name": "editors",
				"type": "Void",
				"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
			},
			{
				"name": "shared_link_policy",
				"example": "members",
				"type": "SharedLinkPolicy?",
				"desc": "The policy to apply to shared links created for content inside this shared folder.  The current user must be on a team to set this policy to SharedLinkPolicy.members. This field is optional.",
				"parameters": [
					{
						"name": "anyone",
						"example": null,
						"type": "Void",
						"desc": "Links can be shared with anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Links can be shared with anyone on the same team as the owner."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Links can only be shared among members of the shared folder."
					}
				]
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Links can be shared with anyone."
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Links can be shared with anyone on the same team as the owner."
			},
			{
				"name": "members",
				"type": "Void",
				"desc": "Links can only be shared among members of the shared folder."
			},
			{
				"name": "force_async",
				"example": false,
				"type": "Boolean",
				"desc": "Whether to force the share to happen asynchronously. The default for this field is False."
			},
			{
				"name": "actions",
				"type": "List of (FolderAction)?",
				"desc": "This is a list indicating whether each returned folder data entry will include a boolean field FolderPermission.allow that describes whether the current user can perform the `FolderAction` on the folder. This field is optional.",
				"parameters": [
					{
						"name": "change_options",
						"example": null,
						"type": "Void",
						"desc": "Change folder options, such as who can be invited to join the folder."
					},
					{
						"name": "disable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Disable viewer information for this folder."
					},
					{
						"name": "edit_contents",
						"example": null,
						"type": "Void",
						"desc": "Change or edit contents of the folder."
					},
					{
						"name": "enable_viewer_info",
						"example": null,
						"type": "Void",
						"desc": "Enable viewer information on the folder."
					},
					{
						"name": "invite_editor",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read and write permission."
					},
					{
						"name": "invite_viewer",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission."
					},
					{
						"name": "invite_viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
					},
					{
						"name": "relinquish_membership",
						"example": null,
						"type": "Void",
						"desc": "Relinquish one's own membership in the folder."
					},
					{
						"name": "unmount",
						"example": null,
						"type": "Void",
						"desc": "Unmount the folder."
					},
					{
						"name": "unshare",
						"example": null,
						"type": "Void",
						"desc": "Stop sharing this folder."
					},
					{
						"name": "leave_a_copy",
						"example": null,
						"type": "Void",
						"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
					},
					{
						"name": "share_link",
						"example": null,
						"type": "Void",
						"desc": "This action is deprecated. Use create_link instead."
					},
					{
						"name": "create_link",
						"example": null,
						"type": "Void",
						"desc": "Create a shared link for folder."
					}
				]
			},
			{
				"name": "change_options",
				"type": "Void",
				"desc": "Change folder options, such as who can be invited to join the folder."
			},
			{
				"name": "disable_viewer_info",
				"type": "Void",
				"desc": "Disable viewer information for this folder."
			},
			{
				"name": "edit_contents",
				"type": "Void",
				"desc": "Change or edit contents of the folder."
			},
			{
				"name": "enable_viewer_info",
				"type": "Void",
				"desc": "Enable viewer information on the folder."
			},
			{
				"name": "invite_editor",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read and write permission."
			},
			{
				"name": "invite_viewer",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission."
			},
			{
				"name": "invite_viewer_no_comment",
				"type": "Void",
				"desc": "Invite a user or group to join the folder with read permission but no comment permissions."
			},
			{
				"name": "relinquish_membership",
				"type": "Void",
				"desc": "Relinquish one's own membership in the folder."
			},
			{
				"name": "unmount",
				"type": "Void",
				"desc": "Unmount the folder."
			},
			{
				"name": "unshare",
				"type": "Void",
				"desc": "Stop sharing this folder."
			},
			{
				"name": "leave_a_copy",
				"type": "Void",
				"desc": "Keep a copy of the contents upon leaving or being kicked from the folder."
			},
			{
				"name": "share_link",
				"type": "Void",
				"desc": "This action is deprecated. Use create_link instead."
			},
			{
				"name": "create_link",
				"type": "Void",
				"desc": "Create a shared link for folder."
			},
			{
				"name": "link_settings",
				"type": "LinkSettings?",
				"desc": "Settings on the link for this folder. This field is optional.",
				"parameters": [
					{
						"name": "audience",
						"example": null,
						"type": "LinkAudience?",
						"desc": "The type of audience on the link for this file. This field is optional.",
						"parameters": [
							{
								"name": "public",
								"example": null,
								"type": "Void",
								"desc": "Link is accessible by anyone."
							},
							{
								"name": "team",
								"example": null,
								"type": "Void",
								"desc": "Link is accessible only by team members."
							},
							{
								"name": "members",
								"example": null,
								"type": "Void",
								"desc": "Link is accessible only by members of the content."
							}
						]
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible by anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by team members."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by members of the content."
					},
					{
						"name": "expiry",
						"example": null,
						"type": "LinkExpiry?",
						"desc": "An expiry timestamp to set on a link. This field is optional.",
						"parameters": [
							{
								"name": "remove_expiry",
								"example": null,
								"type": "Void",
								"desc": "Remove the currently set expiry for the link."
							},
							{
								"name": "set_expiry",
								"example": null,
								"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
								"desc": "Set a new expiry or change an existing expiry."
							}
						]
					},
					{
						"name": "remove_expiry",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set expiry for the link."
					},
					{
						"name": "set_expiry",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
						"desc": "Set a new expiry or change an existing expiry."
					},
					{
						"name": "password",
						"example": null,
						"type": "LinkPassword?",
						"desc": "The password for the link. This field is optional.",
						"parameters": [
							{
								"name": "remove_password",
								"example": null,
								"type": "Void",
								"desc": "Remove the currently set password for the link."
							},
							{
								"name": "set_password",
								"example": null,
								"type": "String",
								"desc": "Set a new password or change an existing password."
							}
						]
					},
					{
						"name": "remove_password",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set password for the link."
					},
					{
						"name": "set_password",
						"example": null,
						"type": "String",
						"desc": "Set a new password or change an existing password."
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible by anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by team members."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by members of the content."
					},
					{
						"name": "remove_expiry",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set expiry for the link."
					},
					{
						"name": "set_expiry",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
						"desc": "Set a new expiry or change an existing expiry."
					},
					{
						"name": "remove_password",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set password for the link."
					},
					{
						"name": "set_password",
						"example": null,
						"type": "String",
						"desc": "Set a new password or change an existing password."
					}
				]
			},
			{
				"name": "audience",
				"type": "LinkAudience?",
				"desc": "The type of audience on the link for this file. This field is optional.",
				"parameters": [
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible by anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by team members."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by members of the content."
					}
				]
			},
			{
				"name": "public",
				"type": "Void",
				"desc": "Link is accessible by anyone."
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Link is accessible only by team members."
			},
			{
				"name": "members",
				"type": "Void",
				"desc": "Link is accessible only by members of the content."
			},
			{
				"name": "expiry",
				"type": "LinkExpiry?",
				"desc": "An expiry timestamp to set on a link. This field is optional.",
				"parameters": [
					{
						"name": "remove_expiry",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set expiry for the link."
					},
					{
						"name": "set_expiry",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
						"desc": "Set a new expiry or change an existing expiry."
					}
				]
			},
			{
				"name": "remove_expiry",
				"type": "Void",
				"desc": "Remove the currently set expiry for the link."
			},
			{
				"name": "set_expiry",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
				"desc": "Set a new expiry or change an existing expiry."
			},
			{
				"name": "password",
				"type": "LinkPassword?",
				"desc": "The password for the link. This field is optional.",
				"parameters": [
					{
						"name": "remove_password",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set password for the link."
					},
					{
						"name": "set_password",
						"example": null,
						"type": "String",
						"desc": "Set a new password or change an existing password."
					}
				]
			},
			{
				"name": "remove_password",
				"type": "Void",
				"desc": "Remove the currently set password for the link."
			},
			{
				"name": "set_password",
				"type": "String",
				"desc": "Set a new password or change an existing password."
			},
			{
				"name": "viewer_info_policy",
				"type": "ViewerInfoPolicy?",
				"desc": "Who can enable/disable viewer info for this shared folder. This field is optional.",
				"parameters": [
					{
						"name": "enabled",
						"example": null,
						"type": "Void",
						"desc": "Viewer information is available on this file."
					},
					{
						"name": "disabled",
						"example": null,
						"type": "Void",
						"desc": "Viewer information is disabled on this file."
					}
				]
			},
			{
				"name": "enabled",
				"type": "Void",
				"desc": "Viewer information is available on this file."
			},
			{
				"name": "disabled",
				"type": "Void",
				"desc": "Viewer information is disabled on this file."
			}
		],
		"returnParameters": {
			".tag": "complete",
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"sharing/transfer_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/transfer_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "to_dropbox_id",
				"example": "dbid:AAEufNrMPSPe0dMQijRP0N_aZtBJRm26W4Q",
				"type": "String(min_length=1)",
				"desc": "A account or team member ID to transfer ownership to."
			}
		],
		"returnParameters": null
	},
	"sharing/unmount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unmount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			}
		],
		"returnParameters": null
	},
	"sharing/unshare_file": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "The file to unshare."
			}
		],
		"returnParameters": null
	},
	"sharing/unshare_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "leave_a_copy",
				"example": false,
				"type": "Boolean",
				"desc": "If true, members of this shared folder will get a copy of this folder after it's unshared. Otherwise, it will be removed from their Dropbox. The current user, who is an owner, will always retain their copy. The default for this field is False."
			}
		],
		"returnParameters": {
			".tag": "complete"
		}
	},
	"sharing/update_file_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_file_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "file",
				"example": "id:3kmLmQFnf1AAAAAAAAAAAw",
				"type": "String(min_length=1, pattern=\"((/|id:).*|nspath:[0-9]+:.*)|ns:[0-9]+(/.*)?\")",
				"desc": "File for which we are changing a member's access."
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "The member whose access we are changing.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "access_level",
				"example": "viewer",
				"type": "AccessLevel",
				"desc": "The new access level for the member.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			},
			{
				"name": "viewer_no_comment",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder and does not have any access to comments."
			}
		],
		"returnParameters": null
	},
	"sharing/update_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "member",
				"example": {
					".tag": "email",
					"email": "justin@example.com"
				},
				"type": "MemberSelector",
				"desc": "The member of the shared folder to update.  Only the MemberSelector.dropbox_id may be set at this time.",
				"parameters": [
					{
						"name": "dropbox_id",
						"example": null,
						"type": "String(min_length=1)",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"example": null,
						"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String(min_length=1)",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String(max_length=255, pattern=\"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$\")",
				"desc": "E-mail address of member."
			},
			{
				"name": "access_level",
				"example": "editor",
				"type": "AccessLevel",
				"desc": "The new access level for member. AccessLevel.owner is disallowed.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "viewer_no_comment",
						"example": null,
						"type": "Void",
						"desc": "The collaborator can only view the shared folder and does not have any access to comments."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			},
			{
				"name": "viewer_no_comment",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder and does not have any access to comments."
			}
		],
		"returnParameters": null
	},
	"sharing/update_folder_policy": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_policy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "shared_folder_id",
				"example": "84528192421",
				"type": "String(pattern=\"[-_0-9a-zA-Z:]+\")",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "member_policy",
				"example": "team",
				"type": "MemberPolicy?",
				"desc": "Who can be a member of this shared folder. Only applicable if the current user is on a team. This field is optional.",
				"parameters": [
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Only a teammate can become a member."
					},
					{
						"name": "anyone",
						"example": null,
						"type": "Void",
						"desc": "Anyone can become a member."
					}
				]
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Only a teammate can become a member."
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Anyone can become a member."
			},
			{
				"name": "acl_update_policy",
				"example": "owner",
				"type": "AclUpdatePolicy?",
				"desc": "Who can add and remove members of this shared folder. This field is optional.",
				"parameters": [
					{
						"name": "owner",
						"example": null,
						"type": "Void",
						"desc": "Only the owner can update the ACL."
					},
					{
						"name": "editors",
						"example": null,
						"type": "Void",
						"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "Only the owner can update the ACL."
			},
			{
				"name": "editors",
				"type": "Void",
				"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
			},
			{
				"name": "viewer_info_policy",
				"type": "ViewerInfoPolicy?",
				"desc": "Who can enable/disable viewer info for this shared folder. This field is optional.",
				"parameters": [
					{
						"name": "enabled",
						"example": null,
						"type": "Void",
						"desc": "Viewer information is available on this file."
					},
					{
						"name": "disabled",
						"example": null,
						"type": "Void",
						"desc": "Viewer information is disabled on this file."
					}
				]
			},
			{
				"name": "enabled",
				"type": "Void",
				"desc": "Viewer information is available on this file."
			},
			{
				"name": "disabled",
				"type": "Void",
				"desc": "Viewer information is disabled on this file."
			},
			{
				"name": "shared_link_policy",
				"example": "members",
				"type": "SharedLinkPolicy?",
				"desc": "The policy to apply to shared links created for content inside this shared folder. The current user must be on a team to set this policy to SharedLinkPolicy.members. This field is optional.",
				"parameters": [
					{
						"name": "anyone",
						"example": null,
						"type": "Void",
						"desc": "Links can be shared with anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Links can be shared with anyone on the same team as the owner."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Links can only be shared among members of the shared folder."
					}
				]
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Links can be shared with anyone."
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Links can be shared with anyone on the same team as the owner."
			},
			{
				"name": "members",
				"type": "Void",
				"desc": "Links can only be shared among members of the shared folder."
			},
			{
				"name": "link_settings",
				"type": "LinkSettings?",
				"desc": "Settings on the link for this folder. This field is optional.",
				"parameters": [
					{
						"name": "audience",
						"example": null,
						"type": "LinkAudience?",
						"desc": "The type of audience on the link for this file. This field is optional.",
						"parameters": [
							{
								"name": "public",
								"example": null,
								"type": "Void",
								"desc": "Link is accessible by anyone."
							},
							{
								"name": "team",
								"example": null,
								"type": "Void",
								"desc": "Link is accessible only by team members."
							},
							{
								"name": "members",
								"example": null,
								"type": "Void",
								"desc": "Link is accessible only by members of the content."
							}
						]
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible by anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by team members."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by members of the content."
					},
					{
						"name": "expiry",
						"example": null,
						"type": "LinkExpiry?",
						"desc": "An expiry timestamp to set on a link. This field is optional.",
						"parameters": [
							{
								"name": "remove_expiry",
								"example": null,
								"type": "Void",
								"desc": "Remove the currently set expiry for the link."
							},
							{
								"name": "set_expiry",
								"example": null,
								"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
								"desc": "Set a new expiry or change an existing expiry."
							}
						]
					},
					{
						"name": "remove_expiry",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set expiry for the link."
					},
					{
						"name": "set_expiry",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
						"desc": "Set a new expiry or change an existing expiry."
					},
					{
						"name": "password",
						"example": null,
						"type": "LinkPassword?",
						"desc": "The password for the link. This field is optional.",
						"parameters": [
							{
								"name": "remove_password",
								"example": null,
								"type": "Void",
								"desc": "Remove the currently set password for the link."
							},
							{
								"name": "set_password",
								"example": null,
								"type": "String",
								"desc": "Set a new password or change an existing password."
							}
						]
					},
					{
						"name": "remove_password",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set password for the link."
					},
					{
						"name": "set_password",
						"example": null,
						"type": "String",
						"desc": "Set a new password or change an existing password."
					},
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible by anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by team members."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by members of the content."
					},
					{
						"name": "remove_expiry",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set expiry for the link."
					},
					{
						"name": "set_expiry",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
						"desc": "Set a new expiry or change an existing expiry."
					},
					{
						"name": "remove_password",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set password for the link."
					},
					{
						"name": "set_password",
						"example": null,
						"type": "String",
						"desc": "Set a new password or change an existing password."
					}
				]
			},
			{
				"name": "audience",
				"type": "LinkAudience?",
				"desc": "The type of audience on the link for this file. This field is optional.",
				"parameters": [
					{
						"name": "public",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible by anyone."
					},
					{
						"name": "team",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by team members."
					},
					{
						"name": "members",
						"example": null,
						"type": "Void",
						"desc": "Link is accessible only by members of the content."
					}
				]
			},
			{
				"name": "public",
				"type": "Void",
				"desc": "Link is accessible by anyone."
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Link is accessible only by team members."
			},
			{
				"name": "members",
				"type": "Void",
				"desc": "Link is accessible only by members of the content."
			},
			{
				"name": "expiry",
				"type": "LinkExpiry?",
				"desc": "An expiry timestamp to set on a link. This field is optional.",
				"parameters": [
					{
						"name": "remove_expiry",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set expiry for the link."
					},
					{
						"name": "set_expiry",
						"example": null,
						"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
						"desc": "Set a new expiry or change an existing expiry."
					}
				]
			},
			{
				"name": "remove_expiry",
				"type": "Void",
				"desc": "Remove the currently set expiry for the link."
			},
			{
				"name": "set_expiry",
				"type": "Timestamp(format=\"%Y-%m-%dT%H:%M:%SZ\")",
				"desc": "Set a new expiry or change an existing expiry."
			},
			{
				"name": "password",
				"type": "LinkPassword?",
				"desc": "The password for the link. This field is optional.",
				"parameters": [
					{
						"name": "remove_password",
						"example": null,
						"type": "Void",
						"desc": "Remove the currently set password for the link."
					},
					{
						"name": "set_password",
						"example": null,
						"type": "String",
						"desc": "Set a new password or change an existing password."
					}
				]
			},
			{
				"name": "remove_password",
				"type": "Void",
				"desc": "Remove the currently set password for the link."
			},
			{
				"name": "set_password",
				"type": "String",
				"desc": "Set a new password or change an existing password."
			}
		],
		"returnParameters": {
			"access_type": {
				".tag": "owner"
			},
			"is_inside_team_folder": false,
			"is_team_folder": false,
			"name": "dir",
			"policy": {
				"acl_update_policy": {
					".tag": "owner"
				},
				"shared_link_policy": {
					".tag": "anyone"
				},
				"member_policy": {
					".tag": "anyone"
				},
				"resolved_member_policy": {
					".tag": "team"
				}
			},
			"preview_url": "https://www.dropbox.com/scl/fo/fir9vjelf",
			"shared_folder_id": "84528192421",
			"time_invited": "2016-01-20T00:00:00Z",
			"path_lower": "/dir",
			"link_metadata": {
				"audience_options": [
					{
						".tag": "public"
					},
					{
						".tag": "team"
					},
					{
						".tag": "members"
					}
				],
				"current_audience": {
					".tag": "public"
				},
				"link_permissions": [
					{
						"action": {
							".tag": "change_audience"
						},
						"allow": true
					}
				],
				"password_protected": false,
				"url": ""
			},
			"permissions": []
		}
	},
	"users/get_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "account_id",
				"example": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
				"type": "String(min_length=40, max_length=40)",
				"desc": "A user's account identifier."
			}
		],
		"returnParameters": {
			"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
			"name": {
				"given_name": "Franz",
				"surname": "Ferdinand",
				"familiar_name": "Franz",
				"display_name": "Franz Ferdinand (Personal)",
				"abbreviated_name": "FF"
			},
			"email": "franz@dropbox.com",
			"email_verified": true,
			"disabled": false,
			"is_teammate": false,
			"profile_photo_url": "https://dl-web.dropbox.com/account_photo/get/dbid%3AAAH4f99T0taONIb-OurWxbNQ6ywGRopQngc?vers=1453416696524&size=128x128"
		}
	},
	"users/get_account_batch": {
		"uri": "https://api.dropboxapi.com/2/users/get_account_batch",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [
			{
				"name": "account_ids",
				"example": [
					"dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
					"dbid:AAH1Vcz-DVoRDeixtr_OA8oUGgiqhs4XPOQ"
				],
				"type": "List of (String(min_length=40, max_length=40), min_items=1)",
				"desc": "List of user account identifiers.  Should not contain any duplicate account IDs."
			}
		],
		"returnParameters": null
	},
	"users/get_current_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_current_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [],
		"returnParameters": {
			"account_id": "dbid:AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc",
			"name": {
				"given_name": "Franz",
				"surname": "Ferdinand",
				"familiar_name": "Franz",
				"display_name": "Franz Ferdinand (Personal)",
				"abbreviated_name": "FF"
			},
			"email": "franz@dropbox.com",
			"email_verified": true,
			"disabled": false,
			"locale": "en",
			"referral_link": "https://db.tt/ZITNuhtI",
			"is_paired": true,
			"account_type": {
				".tag": "business"
			},
			"country": "US",
			"team": {
				"id": "dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I",
				"name": "Acme, Inc.",
				"sharing_policies": {
					"shared_folder_member_policy": {
						".tag": "team"
					},
					"shared_folder_join_policy": {
						".tag": "from_anyone"
					},
					"shared_link_create_policy": {
						".tag": "team_only"
					}
				}
			},
			"team_member_id": "dbmid:AAHhy7WsR0x-u4ZCqiDl5Fz5zvuL3kmspwU"
		}
	},
	"users/get_space_usage": {
		"uri": "https://api.dropboxapi.com/2/users/get_space_usage",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"endpointFormat": "rpc",
		"parameters": [],
		"returnParameters": {
			"used": 314159265,
			"allocation": {
				".tag": "individual",
				"allocated": 10000000000
			}
		}
	}
}