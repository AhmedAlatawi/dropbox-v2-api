{
	"users/get_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "account_id",
				"type": "String",
				"desc": "A user's account identifier."
			}
		]
	},
	"users/get_current_account": {
		"uri": "https://api.dropboxapi.com/2/users/get_current_account",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": []
	},
	"users/get_space_usage": {
		"uri": "https://api.dropboxapi.com/2/users/get_space_usage",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": []
	},
	"users/get_account_batch": {
		"uri": "https://api.dropboxapi.com/2/users/get_account_batch",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "account_ids",
				"type": "List of (String)",
				"desc": "List of user account identifiers.  Should not contain any duplicate account IDs."
			}
		]
	},
	"files/get_metadata": {
		"uri": "https://api.dropboxapi.com/2/files/get_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path of a file or folder on Dropbox"
			},
			{
				"name": "include_media_info",
				"type": "Boolean",
				"desc": "If true, :field:'FileMetadata.media_info' is set for photo and video. The default for this field is False."
			}
		]
	},
	"files/list_folder/longpoll": {
		"uri": "https://notify.dropboxapi.com/2/files/list_folder/longpoll",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"parameters": [
			{
				"name": "cursor",
				"type": "String",
				"desc": "A cursor as returned by   or"
			},
			{
				"name": "timeout",
				"type": "UInt64",
				"desc": "A timeout in seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts. The default for this field is 30."
			}
		]
	},
	"files/list_folder": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to the folder you want to see the contents of."
			},
			{
				"name": "recursive",
				"type": "Boolean",
				"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
			},
			{
				"name": "include_media_info",
				"type": "Boolean",
				"desc": "If true, :field:'FileMetadata.media_info' is set for photo and video. The default for this field is False."
			},
			{
				"name": "include_deleted",
				"type": "Boolean",
				"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
			}
		]
	},
	"files/list_folder/continue": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "cursor",
				"type": "String",
				"desc": "The cursor returned by your last call to   or  ."
			}
		]
	},
	"files/list_folder/get_latest_cursor": {
		"uri": "https://api.dropboxapi.com/2/files/list_folder/get_latest_cursor",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to the folder you want to see the contents of."
			},
			{
				"name": "recursive",
				"type": "Boolean",
				"desc": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False."
			},
			{
				"name": "include_media_info",
				"type": "Boolean",
				"desc": "If true, :field:'FileMetadata.media_info' is set for photo and video. The default for this field is False."
			},
			{
				"name": "include_deleted",
				"type": "Boolean",
				"desc": "If true, the results will include entries for files and folders that used to exist but were deleted. The default for this field is False."
			}
		]
	},
	"files/download": {
		"uri": "https://content.dropboxapi.com/2/files/download",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path of the file to download."
			},
			{
				"name": "rev",
				"type": "String?",
				"desc": "Deprecated. Please specify revision in :field:'path' instead This field is optional."
			}
		]
	},
	"files/upload_session/start": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/start",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"parameters": []
	},
	"files/upload_session/append": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/append",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "session_id",
				"type": "String",
				"desc": "The upload session ID (returned by  )."
			},
			{
				"name": "offset",
				"type": "UInt64",
				"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
			}
		]
	},
	"files/upload_session/finish": {
		"uri": "https://content.dropboxapi.com/2/files/upload_session/finish",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "cursor",
				"type": "UploadSessionCursor",
				"desc": "Contains the upload session ID and the offset.",
				"parameters": [
					{
						"name": "session_id",
						"type": "String",
						"desc": "The upload session ID (returned by  )."
					},
					{
						"name": "offset",
						"type": "UInt64",
						"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
					}
				]
			},
			{
				"name": "session_id",
				"type": "String",
				"desc": "The upload session ID (returned by  )."
			},
			{
				"name": "offset",
				"type": "UInt64",
				"desc": "The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error."
			},
			{
				"name": "commit",
				"type": "CommitInfo",
				"desc": "Contains the path and other optional modifiers for the commit.",
				"parameters": [
					{
						"name": "path",
						"type": "String",
						"desc": "Path in the user's Dropbox to save the file."
					},
					{
						"name": "mode",
						"type": "WriteMode",
						"desc": "Selects what to do if the file already exists. The default for this union is add.",
						"parameters": [
							{
								"name": "add",
								"type": "Void",
								"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
							},
							{
								"name": "overwrite",
								"type": "Void",
								"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
							},
							{
								"name": "update",
								"type": "String",
								"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
							}
						]
					},
					{
						"name": "add",
						"type": "Void",
						"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"type": "String",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					},
					{
						"name": "autorename",
						"type": "Boolean",
						"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
					},
					{
						"name": "client_modified",
						"type": "Timestamp?",
						"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
					},
					{
						"name": "mute",
						"type": "Boolean",
						"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If True, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
					},
					{
						"name": "add",
						"type": "Void",
						"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"type": "String",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "path",
				"type": "String",
				"desc": "Path in the user's Dropbox to save the file."
			},
			{
				"name": "mode",
				"type": "WriteMode",
				"desc": "Selects what to do if the file already exists. The default for this union is add.",
				"parameters": [
					{
						"name": "add",
						"type": "Void",
						"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"type": "String",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "add",
				"type": "Void",
				"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
			},
			{
				"name": "overwrite",
				"type": "Void",
				"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
			},
			{
				"name": "update",
				"type": "String",
				"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
			},
			{
				"name": "autorename",
				"type": "Boolean",
				"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
			},
			{
				"name": "client_modified",
				"type": "Timestamp?",
				"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
			},
			{
				"name": "mute",
				"type": "Boolean",
				"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If True, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
			}
		]
	},
	"files/upload": {
		"uri": "https://content.dropboxapi.com/2/files/upload",
		"requiresAuthHeader": true,
		"requiresReadableStream": true,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "Path in the user's Dropbox to save the file."
			},
			{
				"name": "mode",
				"type": "WriteMode",
				"desc": "Selects what to do if the file already exists. The default for this union is add.",
				"parameters": [
					{
						"name": "add",
						"type": "Void",
						"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
					},
					{
						"name": "overwrite",
						"type": "Void",
						"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
					},
					{
						"name": "update",
						"type": "String",
						"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
					}
				]
			},
			{
				"name": "add",
				"type": "Void",
				"desc": "Never overwrite the existing file. The autorename strategy is to append a number to the file name. For example, \"document.txt\" might become \"document (2).txt\"."
			},
			{
				"name": "overwrite",
				"type": "Void",
				"desc": "Always overwrite the existing file. The autorename strategy is the same as it is for add."
			},
			{
				"name": "update",
				"type": "String",
				"desc": "Overwrite if the given \"rev\" matches the existing file's \"rev\". The autorename strategy is to append the string \"conflicted copy\" to the file name. For example, \"document.txt\" might become \"document (conflicted copy).txt\" or \"document (Panda's conflicted copy).txt\"."
			},
			{
				"name": "autorename",
				"type": "Boolean",
				"desc": "If there's a conflict, as determined by mode, have the Dropbox server try to autorename the file to avoid conflict. The default for this field is False."
			},
			{
				"name": "client_modified",
				"type": "Timestamp?",
				"desc": "The value to store as the client_modified timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified. This field is optional."
			},
			{
				"name": "mute",
				"type": "Boolean",
				"desc": "Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If True, this tells the clients that this modification shouldn't result in a user notification. The default for this field is False."
			}
		]
	},
	"files/search": {
		"uri": "https://api.dropboxapi.com/2/files/search",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path in the user's Dropbox to search. Should probably be a folder."
			},
			{
				"name": "query",
				"type": "String",
				"desc": "The string to search for. The search string is split on spaces into multiple tokens. For file name searching, the last token is used for prefix matching (i.e. \"bat c\" matches \"bat cave\" but not \"batman car\")."
			},
			{
				"name": "start",
				"type": "UInt64",
				"desc": "The starting index within the search results (used for paging). The default for this field is 0."
			},
			{
				"name": "max_results",
				"type": "UInt64",
				"desc": "The maximum number of search results to return. The default for this field is 100."
			},
			{
				"name": "mode",
				"type": "SearchMode",
				"desc": "The search mode (filename, filename_and_content, or deleted_filename). Note that searching file content is only available for Dropbox Business accounts. The default for this union is filename.",
				"parameters": [
					{
						"name": "filename",
						"type": "Void",
						"desc": "Search file and folder names."
					},
					{
						"name": "filename_and_content",
						"type": "Void",
						"desc": "Search file and folder names as well as file contents."
					},
					{
						"name": "deleted_filename",
						"type": "Void",
						"desc": "Search for deleted file and folder names."
					}
				]
			},
			{
				"name": "filename",
				"type": "Void",
				"desc": "Search file and folder names."
			},
			{
				"name": "filename_and_content",
				"type": "Void",
				"desc": "Search file and folder names as well as file contents."
			},
			{
				"name": "deleted_filename",
				"type": "Void",
				"desc": "Search for deleted file and folder names."
			}
		]
	},
	"files/create_folder": {
		"uri": "https://api.dropboxapi.com/2/files/create_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "Path in the user's Dropbox to create."
			}
		]
	},
	"files/delete": {
		"uri": "https://api.dropboxapi.com/2/files/delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "Path in the user's Dropbox to delete."
			}
		]
	},
	"files/permanently_delete": {
		"uri": "https://api.dropboxapi.com/2/files/permanently_delete",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "Path in the user's Dropbox to delete."
			}
		]
	},
	"files/copy": {
		"uri": "https://api.dropboxapi.com/2/files/copy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "from_path",
				"type": "String",
				"desc": "Path in the user's Dropbox to be copied or moved."
			},
			{
				"name": "to_path",
				"type": "String",
				"desc": "Path in the user's Dropbox that is the destination."
			}
		]
	},
	"files/move": {
		"uri": "https://api.dropboxapi.com/2/files/move",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "from_path",
				"type": "String",
				"desc": "Path in the user's Dropbox to be copied or moved."
			},
			{
				"name": "to_path",
				"type": "String",
				"desc": "Path in the user's Dropbox that is the destination."
			}
		]
	},
	"files/get_thumbnail": {
		"uri": "https://content.dropboxapi.com/2/files/get_thumbnail",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to the image file you want to thumbnail."
			},
			{
				"name": "format",
				"type": "ThumbnailFormat",
				"desc": "The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts. The default for this union is jpeg.",
				"parameters": [
					{
						"name": "jpeg",
						"type": "Void",
						"desc": ""
					},
					{
						"name": "png",
						"type": "Void",
						"desc": ""
					}
				]
			},
			{
				"name": "jpeg",
				"type": "Void",
				"desc": ""
			},
			{
				"name": "png",
				"type": "Void",
				"desc": ""
			},
			{
				"name": "size",
				"type": "ThumbnailSize",
				"desc": "The size for the thumbnail image. The default for this union is w64h64.",
				"parameters": [
					{
						"name": "w32h32",
						"type": "Void",
						"desc": "32 by 32 px."
					},
					{
						"name": "w64h64",
						"type": "Void",
						"desc": "64 by 64 px."
					},
					{
						"name": "w128h128",
						"type": "Void",
						"desc": "128 by 128 px."
					},
					{
						"name": "w640h480",
						"type": "Void",
						"desc": "640 by 480 px."
					},
					{
						"name": "w1024h768",
						"type": "Void",
						"desc": "1024 by 768"
					}
				]
			},
			{
				"name": "w32h32",
				"type": "Void",
				"desc": "32 by 32 px."
			},
			{
				"name": "w64h64",
				"type": "Void",
				"desc": "64 by 64 px."
			},
			{
				"name": "w128h128",
				"type": "Void",
				"desc": "128 by 128 px."
			},
			{
				"name": "w640h480",
				"type": "Void",
				"desc": "640 by 480 px."
			},
			{
				"name": "w1024h768",
				"type": "Void",
				"desc": "1024 by 768"
			}
		]
	},
	"files/get_preview": {
		"uri": "https://content.dropboxapi.com/2/files/get_preview",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path of the file to preview."
			},
			{
				"name": "rev",
				"type": "String?",
				"desc": "Deprecated. Please specify revision in :field:'path' instead This field is optional."
			}
		]
	},
	"files/list_revisions": {
		"uri": "https://api.dropboxapi.com/2/files/list_revisions",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to the file you want to see the revisions of."
			},
			{
				"name": "limit",
				"type": "UInt64",
				"desc": "The maximum number of revision entries returned. The default for this field is 10."
			}
		]
	},
	"files/restore": {
		"uri": "https://api.dropboxapi.com/2/files/restore",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to the file you want to restore."
			},
			{
				"name": "rev",
				"type": "String",
				"desc": "The revision to restore for the file."
			}
		]
	},
	"sharing/get_shared_link_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_link_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "url",
				"type": "String",
				"desc": "URL of the shared link."
			},
			{
				"name": "path",
				"type": "String?",
				"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If the shared link has a password, this parameter can be used. This field is optional."
			}
		]
	},
	"sharing/list_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String?",
				"desc": "See   description. This field is optional."
			},
			{
				"name": "cursor",
				"type": "String?",
				"desc": "The cursor returned by your last call to  . This field is optional."
			}
		]
	},
	"sharing/modify_shared_link_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/modify_shared_link_settings",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "url",
				"type": "String",
				"desc": "URL of the shared link to change its settings"
			},
			{
				"name": "settings",
				"type": "SharedLinkSettings",
				"desc": "Set of settings for the shared link.",
				"parameters": [
					{
						"name": "requested_visibility",
						"type": "RequestedVisibility?",
						"desc": "The requested access for this shared link. This field is optional.",
						"parameters": [
							{
								"name": "public",
								"type": "Void",
								"desc": "Anyone who has received the link can access it. No login required."
							},
							{
								"name": "team_only",
								"type": "Void",
								"desc": "Only members of the same team can access the link. Login is required."
							},
							{
								"name": "password",
								"type": "Void",
								"desc": "A link-specific password is required to access the link. Login is not required."
							}
						]
					},
					{
						"name": "public",
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					},
					{
						"name": "link_password",
						"type": "String?",
						"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
					},
					{
						"name": "expires",
						"type": "Timestamp?",
						"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
					},
					{
						"name": "public",
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "requested_visibility",
				"type": "RequestedVisibility?",
				"desc": "The requested access for this shared link. This field is optional.",
				"parameters": [
					{
						"name": "public",
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "public",
				"type": "Void",
				"desc": "Anyone who has received the link can access it. No login required."
			},
			{
				"name": "team_only",
				"type": "Void",
				"desc": "Only members of the same team can access the link. Login is required."
			},
			{
				"name": "password",
				"type": "Void",
				"desc": "A link-specific password is required to access the link. Login is not required."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
			},
			{
				"name": "expires",
				"type": "Timestamp?",
				"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
			}
		]
	},
	"sharing/create_shared_link_with_settings": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
		"requiresAuthHeader": false,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to be shared by the shared link"
			},
			{
				"name": "settings",
				"type": "SharedLinkSettings?",
				"desc": "The requested settings for the newly created shared link This field is optional.",
				"parameters": [
					{
						"name": "requested_visibility",
						"type": "RequestedVisibility?",
						"desc": "The requested access for this shared link. This field is optional.",
						"parameters": [
							{
								"name": "public",
								"type": "Void",
								"desc": "Anyone who has received the link can access it. No login required."
							},
							{
								"name": "team_only",
								"type": "Void",
								"desc": "Only members of the same team can access the link. Login is required."
							},
							{
								"name": "password",
								"type": "Void",
								"desc": "A link-specific password is required to access the link. Login is not required."
							}
						]
					},
					{
						"name": "public",
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					},
					{
						"name": "link_password",
						"type": "String?",
						"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
					},
					{
						"name": "expires",
						"type": "Timestamp?",
						"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
					},
					{
						"name": "public",
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "requested_visibility",
				"type": "RequestedVisibility?",
				"desc": "The requested access for this shared link. This field is optional.",
				"parameters": [
					{
						"name": "public",
						"type": "Void",
						"desc": "Anyone who has received the link can access it. No login required."
					},
					{
						"name": "team_only",
						"type": "Void",
						"desc": "Only members of the same team can access the link. Login is required."
					},
					{
						"name": "password",
						"type": "Void",
						"desc": "A link-specific password is required to access the link. Login is not required."
					}
				]
			},
			{
				"name": "public",
				"type": "Void",
				"desc": "Anyone who has received the link can access it. No login required."
			},
			{
				"name": "team_only",
				"type": "Void",
				"desc": "Only members of the same team can access the link. Login is required."
			},
			{
				"name": "password",
				"type": "Void",
				"desc": "A link-specific password is required to access the link. Login is not required."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If requested_visibility is RequestedVisibility.password this is needed to specify the password to access the link. This field is optional."
			},
			{
				"name": "expires",
				"type": "Timestamp?",
				"desc": "Expiration time of the shared link. By default the link won't expire. This field is optional."
			}
		]
	},
	"sharing/revoke_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/revoke_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "url",
				"type": "String",
				"desc": "URL of the shared link."
			}
		]
	},
	"sharing/get_shared_link_file": {
		"uri": "https://content.dropboxapi.com/2/sharing/get_shared_link_file",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "CONTENT",
		"parameters": [
			{
				"name": "url",
				"type": "String",
				"desc": "URL of the shared link."
			},
			{
				"name": "path",
				"type": "String?",
				"desc": "If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used. This field is optional."
			},
			{
				"name": "link_password",
				"type": "String?",
				"desc": "If the shared link has a password, this parameter can be used. This field is optional."
			}
		]
	},
	"sharing/get_shared_links": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_shared_links",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String?",
				"desc": "See   description. This field is optional."
			}
		]
	},
	"sharing/create_shared_link": {
		"uri": "https://api.dropboxapi.com/2/sharing/create_shared_link",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to share."
			},
			{
				"name": "short_url",
				"type": "Boolean",
				"desc": "Whether to return a shortened URL. The default for this field is False."
			},
			{
				"name": "pending_upload",
				"type": "PendingUploadMode?",
				"desc": "If it's okay to share a path that does not yet exist, set this to either PendingUploadMode.file or PendingUploadMode.folder to indicate whether to assume it's a file or folder. This field is optional.",
				"parameters": [
					{
						"name": "file",
						"type": "Void",
						"desc": "Assume pending uploads are files."
					},
					{
						"name": "folder",
						"type": "Void",
						"desc": "Assume pending uploads are folders."
					}
				]
			},
			{
				"name": "file",
				"type": "Void",
				"desc": "Assume pending uploads are files."
			},
			{
				"name": "folder",
				"type": "Void",
				"desc": "Assume pending uploads are folders."
			}
		]
	},
	"sharing/list_folders": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": []
	},
	"sharing/list_folders/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folders/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "cursor",
				"type": "String",
				"desc": "The cursor returned by your last call to   or  ."
			}
		]
	},
	"sharing/get_folder_metadata": {
		"uri": "https://api.dropboxapi.com/2/sharing/get_folder_metadata",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			}
		]
	},
	"sharing/list_folder_members": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			}
		]
	},
	"sharing/list_folder_members/continue": {
		"uri": "https://api.dropboxapi.com/2/sharing/list_folder_members/continue",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "cursor",
				"type": "String",
				"desc": "The cursor returned by your last call to   or  ."
			}
		]
	},
	"sharing/share_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/share_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "path",
				"type": "String",
				"desc": "The path to the folder to share. If it does not exist, then a new one is created."
			},
			{
				"name": "member_policy",
				"type": "MemberPolicy",
				"desc": "Who can be a member of this shared folder. The default for this union is anyone.",
				"parameters": [
					{
						"name": "team",
						"type": "Void",
						"desc": "Only a teammate can become a member."
					},
					{
						"name": "anyone",
						"type": "Void",
						"desc": "Anyone can become a member."
					}
				]
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Only a teammate can become a member."
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Anyone can become a member."
			},
			{
				"name": "acl_update_policy",
				"type": "AclUpdatePolicy",
				"desc": "Who can add and remove members of this shared folder. The default for this union is owner.",
				"parameters": [
					{
						"name": "owner",
						"type": "Void",
						"desc": "Only the owner can update the ACL."
					},
					{
						"name": "editors",
						"type": "Void",
						"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "Only the owner can update the ACL."
			},
			{
				"name": "editors",
				"type": "Void",
				"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
			},
			{
				"name": "shared_link_policy",
				"type": "SharedLinkPolicy",
				"desc": "The policy to apply to shared links created for content inside this shared folder. The default for this union is anyone.",
				"parameters": [
					{
						"name": "anyone",
						"type": "Void",
						"desc": "Links can be shared with anyone."
					},
					{
						"name": "members",
						"type": "Void",
						"desc": "Links can only be shared among members of the shared folder."
					}
				]
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Links can be shared with anyone."
			},
			{
				"name": "members",
				"type": "Void",
				"desc": "Links can only be shared among members of the shared folder."
			},
			{
				"name": "force_async",
				"type": "Boolean",
				"desc": "Whether to force the share to happen asynchronously. The default for this field is False."
			}
		]
	},
	"sharing/check_share_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_share_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "async_job_id",
				"type": "String",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		]
	},
	"sharing/check_job_status": {
		"uri": "https://api.dropboxapi.com/2/sharing/check_job_status",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "async_job_id",
				"type": "String",
				"desc": "Id of the asynchronous job. This is the value of a response returned from the method that launched the job."
			}
		]
	},
	"sharing/unshare_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unshare_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "leave_a_copy",
				"type": "Boolean",
				"desc": "If true, members of this shared folder will get a copy of this folder after it's unshared. Otherwise, it will be removed from their Dropbox. The current user, who is an owner, will always retain their copy."
			}
		]
	},
	"sharing/transfer_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/transfer_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "to_dropbox_id",
				"type": "String",
				"desc": "A account or team member ID to transfer ownership to."
			}
		]
	},
	"sharing/update_folder_policy": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_policy",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "member_policy",
				"type": "MemberPolicy?",
				"desc": "Who can be a member of this shared folder. Only set this if the current user is on a team. This field is optional.",
				"parameters": [
					{
						"name": "team",
						"type": "Void",
						"desc": "Only a teammate can become a member."
					},
					{
						"name": "anyone",
						"type": "Void",
						"desc": "Anyone can become a member."
					}
				]
			},
			{
				"name": "team",
				"type": "Void",
				"desc": "Only a teammate can become a member."
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Anyone can become a member."
			},
			{
				"name": "acl_update_policy",
				"type": "AclUpdatePolicy?",
				"desc": "Who can add and remove members of this shared folder. This field is optional.",
				"parameters": [
					{
						"name": "owner",
						"type": "Void",
						"desc": "Only the owner can update the ACL."
					},
					{
						"name": "editors",
						"type": "Void",
						"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "Only the owner can update the ACL."
			},
			{
				"name": "editors",
				"type": "Void",
				"desc": "Any editor can update the ACL. This may be further restricted to editors on the same team."
			},
			{
				"name": "shared_link_policy",
				"type": "SharedLinkPolicy?",
				"desc": "The policy to apply to shared links created for content inside this shared folder. This field is optional.",
				"parameters": [
					{
						"name": "anyone",
						"type": "Void",
						"desc": "Links can be shared with anyone."
					},
					{
						"name": "members",
						"type": "Void",
						"desc": "Links can only be shared among members of the shared folder."
					}
				]
			},
			{
				"name": "anyone",
				"type": "Void",
				"desc": "Links can be shared with anyone."
			},
			{
				"name": "members",
				"type": "Void",
				"desc": "Links can only be shared among members of the shared folder."
			}
		]
	},
	"sharing/add_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/add_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "members",
				"type": "List of (AddMember)",
				"desc": "The intended list of members to add.  Added members will receive invites to join the shared folder.",
				"parameters": [
					{
						"name": "member",
						"type": "MemberSelector",
						"desc": "The member to add to the shared folder.",
						"parameters": [
							{
								"name": "dropbox_id",
								"type": "String",
								"desc": "Dropbox account, team member, or group ID of member."
							},
							{
								"name": "email",
								"type": "String",
								"desc": "E-mail address of member."
							}
						]
					},
					{
						"name": "dropbox_id",
						"type": "String",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"type": "String",
						"desc": "E-mail address of member."
					},
					{
						"name": "access_level",
						"type": "AccessLevel",
						"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
						"parameters": [
							{
								"name": "owner",
								"type": "Void",
								"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
							},
							{
								"name": "editor",
								"type": "Void",
								"desc": "The collaborator can both view and edit the shared folder."
							},
							{
								"name": "viewer",
								"type": "Void",
								"desc": "The collaborator can only view the shared folder."
							}
						]
					},
					{
						"name": "owner",
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					},
					{
						"name": "dropbox_id",
						"type": "String",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"type": "String",
						"desc": "E-mail address of member."
					},
					{
						"name": "owner",
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					}
				]
			},
			{
				"name": "member",
				"type": "MemberSelector",
				"desc": "The member to add to the shared folder.",
				"parameters": [
					{
						"name": "dropbox_id",
						"type": "String",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"type": "String",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String",
				"desc": "E-mail address of member."
			},
			{
				"name": "access_level",
				"type": "AccessLevel",
				"desc": "The access level to grant member to the shared folder.  AccessLevel.owner is disallowed. The default for this union is viewer.",
				"parameters": [
					{
						"name": "owner",
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			},
			{
				"name": "quiet",
				"type": "Boolean",
				"desc": "Whether added members should be notified via email and device notifications of their invite. The default for this field is False."
			},
			{
				"name": "custom_message",
				"type": "String?",
				"desc": "Optional message to display to added members in their invitation. This field is optional."
			}
		]
	},
	"sharing/remove_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/remove_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "member",
				"type": "MemberSelector",
				"desc": "The member to remove from the folder.",
				"parameters": [
					{
						"name": "dropbox_id",
						"type": "String",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"type": "String",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String",
				"desc": "E-mail address of member."
			},
			{
				"name": "leave_a_copy",
				"type": "Boolean",
				"desc": "If true, the removed user will keep their copy of the folder after it's unshared, assuming it was mounted. Otherwise, it will be removed from their Dropbox. Also, this must be set to false when kicking a group."
			}
		]
	},
	"sharing/update_folder_member": {
		"uri": "https://api.dropboxapi.com/2/sharing/update_folder_member",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			},
			{
				"name": "member",
				"type": "MemberSelector",
				"desc": "The member of the shared folder to update.  Only the MemberSelector.dropbox_id may be set at this time.",
				"parameters": [
					{
						"name": "dropbox_id",
						"type": "String",
						"desc": "Dropbox account, team member, or group ID of member."
					},
					{
						"name": "email",
						"type": "String",
						"desc": "E-mail address of member."
					}
				]
			},
			{
				"name": "dropbox_id",
				"type": "String",
				"desc": "Dropbox account, team member, or group ID of member."
			},
			{
				"name": "email",
				"type": "String",
				"desc": "E-mail address of member."
			},
			{
				"name": "access_level",
				"type": "AccessLevel",
				"desc": "The new access level for member. AccessLevel.owner is disallowed.",
				"parameters": [
					{
						"name": "owner",
						"type": "Void",
						"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
					},
					{
						"name": "editor",
						"type": "Void",
						"desc": "The collaborator can both view and edit the shared folder."
					},
					{
						"name": "viewer",
						"type": "Void",
						"desc": "The collaborator can only view the shared folder."
					}
				]
			},
			{
				"name": "owner",
				"type": "Void",
				"desc": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using  ."
			},
			{
				"name": "editor",
				"type": "Void",
				"desc": "The collaborator can both view and edit the shared folder."
			},
			{
				"name": "viewer",
				"type": "Void",
				"desc": "The collaborator can only view the shared folder."
			}
		]
	},
	"sharing/mount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/mount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID of the shared folder to mount."
			}
		]
	},
	"sharing/unmount_folder": {
		"uri": "https://api.dropboxapi.com/2/sharing/unmount_folder",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			}
		]
	},
	"sharing/relinquish_folder_membership": {
		"uri": "https://api.dropboxapi.com/2/sharing/relinquish_folder_membership",
		"requiresAuthHeader": true,
		"requiresReadableStream": false,
		"endpointType": "RPC",
		"parameters": [
			{
				"name": "shared_folder_id",
				"type": "String",
				"desc": "The ID for the shared folder."
			}
		]
	}
}